/*
 * Generated by gen_defines.py
 *
 * DTS input file:
 *   /home/davit/Desktop/sim/build_sim/zephyr/zephyr.dts.pre
 *
 * Directories with bindings:
 *   /home/davit/Desktop/sim/wch-test/modules/vcp/dts/bindings, $ZEPHYR_BASE/dts/bindings
 *
 * Node dependency ordering (ordinal and path):
 *   0   /
 *   1   /aliases
 *   2   /chosen
 *   3   /cpus
 *   4   /cpus/cpu@0
 *   5   /soc
 *   6   /clocks
 *   7   /clocks/clkmux
 *   8   /soc/pfic@e000e000
 *   9   /soc/gpio@400010a0
 *   10  /soc/gpio@400010c0
 *   11  /soc/system-controller@40001000
 *   12  /soc/system-controller@40001000/pin-controller
 *   13  /soc/system-controller@40001000/pin-controller/pwm_default
 *   14  /soc/pwm@40005000
 *   15  /pwmleds
 *   16  /pwmleds/pwm_led_pa12
 *   17  /pwmleds/pwm_led_pa13
 *   18  /pwmleds/pwm_led_pb14
 *   19  /pwmleds/pwm_led_pb23
 *   20  /pwmleds/pwm_led_pb4
 *   21  /pwmleds/pwm_led_pb7
 *   22  /soc/memory@20000000
 *   23  /soc/systick@e000f000
 *   24  /soc/system-controller@40001000/pin-controller/uart0_default
 *   25  /soc/uart@40003000
 *   26  /soc/system-controller@40001000/pin-controller/uart1_default
 *   27  /soc/uart@40003400
 *   28  /soc/udc@40008400
 *   29  /soc/flash-controller@40001800
 *   30  /soc/flash-controller@40001800/flash@0
 *   31  /soc/flash-controller@40001800/flash@0/partitions
 *   32  /soc/flash-controller@40001800/flash@0/partitions/partition@0
 *   33  /soc/flash-controller@40001800/flash@0/partitions/partition@C000
 *   34  /soc/flash-controller@40001800/flash@0/partitions/partition@3E000
 *   35  /soc/flash-controller@40001800/flash@0/partitions/partition@70000
 *   36  /soc/system-controller@40001000/pin-controller/pwm_default/group1
 *   37  /soc/system-controller@40001000/pin-controller/uart0_default/group1
 *   38  /soc/system-controller@40001000/pin-controller/uart0_default/group2
 *   39  /soc/system-controller@40001000/pin-controller/uart1_default/group1
 *   40  /soc/system-controller@40001000/pin-controller/uart1_default/group2
 *   41  /soc/udc@40008000
 *   42  /soc/udc@40008000/cdc_acm_uart0
 *   43  /soc/udc@40008000/cdc_acm_uart0/vcp_link_cdc0
 *   44  /vcpmap
 *   45  /vcpmap/vcp_usb0
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by /chosen nodes.
 */

/* Used to remove brackets from around a single argument */
#define DT_DEBRACKET_INTERNAL(...) __VA_ARGS__

/*
 * Devicetree node: /
 *
 * Node identifier: DT_N
 */

/* Node's full path: */
#define DT_N_PATH "/"

/* Node's name with unit-address: */
#define DT_N_FULL_NAME "/"

/* Helpers for dealing with node labels: */
#define DT_N_NODELABEL_NUM 0
#define DT_N_FOREACH_NODELABEL(fn) 
#define DT_N_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_CHILD_NUM 7
#define DT_N_CHILD_NUM_STATUS_OKAY 7
#define DT_N_FOREACH_CHILD(fn) fn(DT_N_S_cpus) fn(DT_N_S_soc) fn(DT_N_S_chosen) fn(DT_N_S_clocks) fn(DT_N_S_aliases) fn(DT_N_S_pwmleds) fn(DT_N_S_vcpmap)
#define DT_N_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vcpmap)
#define DT_N_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_pwmleds, __VA_ARGS__) fn(DT_N_S_vcpmap, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vcpmap, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus) fn(DT_N_S_soc) fn(DT_N_S_chosen) fn(DT_N_S_clocks) fn(DT_N_S_aliases) fn(DT_N_S_pwmleds) fn(DT_N_S_vcpmap)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vcpmap)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_pwmleds, __VA_ARGS__) fn(DT_N_S_vcpmap, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_vcpmap, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_ORD 0
#define DT_N_ORD_STR_SORTABLE 00000

/* Ordinals for what this node depends on directly: */
#define DT_N_REQUIRES_ORDS /* nothing */

/* Ordinals for what depends directly on this node: */
#define DT_N_SUPPORTS_ORDS \
	1, /* /aliases */ \
	2, /* /chosen */ \
	3, /* /cpus */ \
	5, /* /soc */ \
	6, /* /clocks */ \
	15, /* /pwmleds */ \
	44, /* /vcpmap */

/* Existence and alternate IDs: */
#define DT_N_EXISTS 1
#define DT_N_INST_0_wch_sim_cxx DT_N

/* Macros for properties that are special in the specification: */
#define DT_N_REG_NUM 0
#define DT_N_RANGES_NUM 0
#define DT_N_FOREACH_RANGE(fn) 
#define DT_N_IRQ_NUM 0
#define DT_N_IRQ_LEVEL 0
#define DT_N_COMPAT_MATCHES_wch_sim_cxx 1
#define DT_N_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_COMPAT_VENDOR_IDX_0 "Nanjing Qinheng Microelectronics Co., Ltd."
#define DT_N_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_COMPAT_MODEL_IDX_0 "sim-cxx"
#define DT_N_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_P_compatible {"wch,sim-cxx"}
#define DT_N_P_compatible_IDX_0 "wch,sim-cxx"
#define DT_N_P_compatible_IDX_0_STRING_UNQUOTED wch,sim-cxx
#define DT_N_P_compatible_IDX_0_STRING_TOKEN wch_sim_cxx
#define DT_N_P_compatible_IDX_0_STRING_UPPER_TOKEN WCH_SIM_CXX
#define DT_N_P_compatible_IDX_0_EXISTS 1
#define DT_N_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_LEN 1
#define DT_N_P_compatible_EXISTS 1

/*
 * Devicetree node: /aliases
 *
 * Node identifier: DT_N_S_aliases
 */

/* Node's full path: */
#define DT_N_S_aliases_PATH "/aliases"

/* Node's name with unit-address: */
#define DT_N_S_aliases_FULL_NAME "aliases"

/* Node parent (/) identifier: */
#define DT_N_S_aliases_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_aliases_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_aliases_NODELABEL_NUM 0
#define DT_N_S_aliases_FOREACH_NODELABEL(fn) 
#define DT_N_S_aliases_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_aliases_CHILD_NUM 0
#define DT_N_S_aliases_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_aliases_FOREACH_CHILD(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_aliases_ORD 1
#define DT_N_S_aliases_ORD_STR_SORTABLE 00001

/* Ordinals for what this node depends on directly: */
#define DT_N_S_aliases_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_aliases_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_aliases_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_aliases_REG_NUM 0
#define DT_N_S_aliases_RANGES_NUM 0
#define DT_N_S_aliases_FOREACH_RANGE(fn) 
#define DT_N_S_aliases_IRQ_NUM 0
#define DT_N_S_aliases_IRQ_LEVEL 0
#define DT_N_S_aliases_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_aliases_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /chosen
 *
 * Node identifier: DT_N_S_chosen
 */

/* Node's full path: */
#define DT_N_S_chosen_PATH "/chosen"

/* Node's name with unit-address: */
#define DT_N_S_chosen_FULL_NAME "chosen"

/* Node parent (/) identifier: */
#define DT_N_S_chosen_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_chosen_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_chosen_NODELABEL_NUM 0
#define DT_N_S_chosen_FOREACH_NODELABEL(fn) 
#define DT_N_S_chosen_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_chosen_CHILD_NUM 0
#define DT_N_S_chosen_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_chosen_FOREACH_CHILD(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_chosen_ORD 2
#define DT_N_S_chosen_ORD_STR_SORTABLE 00002

/* Ordinals for what this node depends on directly: */
#define DT_N_S_chosen_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_chosen_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_chosen_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_chosen_REG_NUM 0
#define DT_N_S_chosen_RANGES_NUM 0
#define DT_N_S_chosen_FOREACH_RANGE(fn) 
#define DT_N_S_chosen_IRQ_NUM 0
#define DT_N_S_chosen_IRQ_LEVEL 0
#define DT_N_S_chosen_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_chosen_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /cpus
 *
 * Node identifier: DT_N_S_cpus
 */

/* Node's full path: */
#define DT_N_S_cpus_PATH "/cpus"

/* Node's name with unit-address: */
#define DT_N_S_cpus_FULL_NAME "cpus"

/* Node parent (/) identifier: */
#define DT_N_S_cpus_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_NODELABEL_NUM 0
#define DT_N_S_cpus_FOREACH_NODELABEL(fn) 
#define DT_N_S_cpus_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_CHILD_NUM 1
#define DT_N_S_cpus_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_cpus_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_cpus_ORD 3
#define DT_N_S_cpus_ORD_STR_SORTABLE 00003

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_SUPPORTS_ORDS \
	4, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_REG_NUM 0
#define DT_N_S_cpus_RANGES_NUM 0
#define DT_N_S_cpus_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_IRQ_NUM 0
#define DT_N_S_cpus_IRQ_LEVEL 0
#define DT_N_S_cpus_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/cpu@0
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0
 *
 * Binding (compatible = wch,qingke-v4):
 *   $ZEPHYR_BASE/dts/bindings/cpu/wch,qingke-v4.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_PATH "/cpus/cpu@0"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_FULL_NAME "cpu@0"

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_0_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_cpu_0_NODELABEL_NUM 1
#define DT_N_S_cpus_S_cpu_0_FOREACH_NODELABEL(fn) fn(cpu0)
#define DT_N_S_cpus_S_cpu_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(cpu0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_0_CHILD_NUM 0
#define DT_N_S_cpus_S_cpu_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_ORD 4
#define DT_N_S_cpus_S_cpu_0_ORD_STR_SORTABLE 00004

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_REQUIRES_ORDS \
	3, /* /cpus */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_EXISTS 1
#define DT_N_INST_0_wch_qingke_v4 DT_N_S_cpus_S_cpu_0
#define DT_N_NODELABEL_cpu0       DT_N_S_cpus_S_cpu_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_0_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_cpus_S_cpu_0_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_0_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_IRQ_LEVEL 0
#define DT_N_S_cpus_S_cpu_0_COMPAT_MATCHES_wch_qingke_v4 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0 "Nanjing Qinheng Microelectronics Co., Ltd."
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0 "qingke-v4"
#define DT_N_S_cpus_S_cpu_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible {"wch,qingke-v4"}
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0 "wch,qingke-v4"
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UNQUOTED wch,qingke-v4
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_TOKEN wch_qingke_v4
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UPPER_TOKEN WCH_QINGKE_V4
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg {0 /* 0x0 */}
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0 0
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_zephyr_deferred_init 0
#define DT_N_S_cpus_S_cpu_0_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc
 *
 * Node identifier: DT_N_S_soc
 */

/* Node's full path: */
#define DT_N_S_soc_PATH "/soc"

/* Node's name with unit-address: */
#define DT_N_S_soc_FULL_NAME "soc"

/* Node parent (/) identifier: */
#define DT_N_S_soc_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_NODELABEL_NUM 0
#define DT_N_S_soc_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_CHILD_NUM 12
#define DT_N_S_soc_CHILD_NUM_STATUS_OKAY 11
#define DT_N_S_soc_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pfic_e000e000) fn(DT_N_S_soc_S_systick_e000f000) fn(DT_N_S_soc_S_flash_controller_40001800) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_system_controller_40001000) fn(DT_N_S_soc_S_gpio_400010a0) fn(DT_N_S_soc_S_gpio_400010c0) fn(DT_N_S_soc_S_uart_40003000) fn(DT_N_S_soc_S_uart_40003400) fn(DT_N_S_soc_S_udc_40008000) fn(DT_N_S_soc_S_udc_40008400) fn(DT_N_S_soc_S_pwm_40005000)
#define DT_N_S_soc_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_pfic_e000e000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_systick_e000f000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40001800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_system_controller_40001000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_400010a0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_400010c0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40003000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40003400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_udc_40008000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_udc_40008400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_40005000)
#define DT_N_S_soc_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pfic_e000e000, __VA_ARGS__) fn(DT_N_S_soc_S_systick_e000f000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40001800, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_system_controller_40001000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_400010a0, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_400010c0, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40003400, __VA_ARGS__) fn(DT_N_S_soc_S_udc_40008000, __VA_ARGS__) fn(DT_N_S_soc_S_udc_40008400, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_40005000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pfic_e000e000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_systick_e000f000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40001800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_system_controller_40001000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_400010a0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_400010c0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40003000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40003400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_udc_40008000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_udc_40008400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_40005000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pfic_e000e000) fn(DT_N_S_soc_S_systick_e000f000) fn(DT_N_S_soc_S_flash_controller_40001800) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_system_controller_40001000) fn(DT_N_S_soc_S_gpio_400010a0) fn(DT_N_S_soc_S_gpio_400010c0) fn(DT_N_S_soc_S_uart_40003400) fn(DT_N_S_soc_S_udc_40008000) fn(DT_N_S_soc_S_udc_40008400) fn(DT_N_S_soc_S_pwm_40005000)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_pfic_e000e000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_systick_e000f000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40001800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_system_controller_40001000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_400010a0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_400010c0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40003400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_udc_40008000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_udc_40008400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_40005000)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pfic_e000e000, __VA_ARGS__) fn(DT_N_S_soc_S_systick_e000f000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40001800, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_system_controller_40001000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_400010a0, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_400010c0, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40003400, __VA_ARGS__) fn(DT_N_S_soc_S_udc_40008000, __VA_ARGS__) fn(DT_N_S_soc_S_udc_40008400, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_40005000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pfic_e000e000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_systick_e000f000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40001800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_system_controller_40001000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_400010a0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_400010c0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40003400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_udc_40008000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_udc_40008400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_40005000, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_ORD 5
#define DT_N_S_soc_ORD_STR_SORTABLE 00005

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_SUPPORTS_ORDS \
	8, /* /soc/pfic@e000e000 */ \
	9, /* /soc/gpio@400010a0 */ \
	10, /* /soc/gpio@400010c0 */ \
	11, /* /soc/system-controller@40001000 */ \
	14, /* /soc/pwm@40005000 */ \
	22, /* /soc/memory@20000000 */ \
	23, /* /soc/systick@e000f000 */ \
	25, /* /soc/uart@40003000 */ \
	27, /* /soc/uart@40003400 */ \
	28, /* /soc/udc@40008400 */ \
	29, /* /soc/flash-controller@40001800 */ \
	41, /* /soc/udc@40008000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_EXISTS 1
#define DT_N_INST_0_wch_ch582f DT_N_S_soc

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_REG_NUM 0
#define DT_N_S_soc_RANGES_NUM 0
#define DT_N_S_soc_FOREACH_RANGE(fn) 
#define DT_N_S_soc_IRQ_NUM 0
#define DT_N_S_soc_IRQ_LEVEL 0
#define DT_N_S_soc_COMPAT_MATCHES_wch_ch582f 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_0 "Nanjing Qinheng Microelectronics Co., Ltd."
#define DT_N_S_soc_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_COMPAT_MODEL_IDX_0 "ch582f"
#define DT_N_S_soc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_P_compatible {"wch,ch582f"}
#define DT_N_S_soc_P_compatible_IDX_0 "wch,ch582f"
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UNQUOTED wch,ch582f
#define DT_N_S_soc_P_compatible_IDX_0_STRING_TOKEN wch_ch582f
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UPPER_TOKEN WCH_CH582F
#define DT_N_S_soc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc, compatible, 0)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc, compatible, 0)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_LEN 1
#define DT_N_S_soc_P_compatible_EXISTS 1

/*
 * Devicetree node: /clocks
 *
 * Node identifier: DT_N_S_clocks
 */

/* Node's full path: */
#define DT_N_S_clocks_PATH "/clocks"

/* Node's name with unit-address: */
#define DT_N_S_clocks_FULL_NAME "clocks"

/* Node parent (/) identifier: */
#define DT_N_S_clocks_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_NODELABEL_NUM 0
#define DT_N_S_clocks_FOREACH_NODELABEL(fn) 
#define DT_N_S_clocks_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_CHILD_NUM 1
#define DT_N_S_clocks_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_clocks_FOREACH_CHILD(fn) fn(DT_N_S_clocks_S_clkmux)
#define DT_N_S_clocks_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_clocks_S_clkmux)
#define DT_N_S_clocks_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_clocks_S_clkmux, __VA_ARGS__)
#define DT_N_S_clocks_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clkmux, __VA_ARGS__)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_clocks_S_clkmux)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_clocks_S_clkmux)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_clocks_S_clkmux, __VA_ARGS__)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clkmux, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_clocks_ORD 6
#define DT_N_S_clocks_ORD_STR_SORTABLE 00006

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_SUPPORTS_ORDS \
	7, /* /clocks/clkmux */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_REG_NUM 0
#define DT_N_S_clocks_RANGES_NUM 0
#define DT_N_S_clocks_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_IRQ_NUM 0
#define DT_N_S_clocks_IRQ_LEVEL 0
#define DT_N_S_clocks_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /clocks/clkmux
 *
 * Node identifier: DT_N_S_clocks_S_clkmux
 *
 * Binding (compatible = wch,ch57x-clkmux):
 *   $ZEPHYR_BASE/dts/bindings/clock/wch,ch57x-clkmux.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clkmux_PATH "/clocks/clkmux"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clkmux_FULL_NAME "clkmux"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clkmux_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clkmux_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_clkmux_NODELABEL_NUM 1
#define DT_N_S_clocks_S_clkmux_FOREACH_NODELABEL(fn) fn(hclk)
#define DT_N_S_clocks_S_clkmux_FOREACH_NODELABEL_VARGS(fn, ...) fn(hclk, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clkmux_CHILD_NUM 0
#define DT_N_S_clocks_S_clkmux_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_clkmux_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clkmux_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clkmux_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clkmux_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clkmux_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clkmux_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clkmux_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clkmux_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clkmux_ORD 7
#define DT_N_S_clocks_S_clkmux_ORD_STR_SORTABLE 00007

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clkmux_REQUIRES_ORDS \
	6, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clkmux_SUPPORTS_ORDS \
	14, /* /soc/pwm@40005000 */ \
	25, /* /soc/uart@40003000 */ \
	27, /* /soc/uart@40003400 */ \
	28, /* /soc/udc@40008400 */ \
	41, /* /soc/udc@40008000 */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clkmux_EXISTS 1
#define DT_N_INST_0_wch_ch57x_clkmux DT_N_S_clocks_S_clkmux
#define DT_N_NODELABEL_hclk          DT_N_S_clocks_S_clkmux

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clkmux_REG_NUM 0
#define DT_N_S_clocks_S_clkmux_RANGES_NUM 0
#define DT_N_S_clocks_S_clkmux_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clkmux_IRQ_NUM 0
#define DT_N_S_clocks_S_clkmux_IRQ_LEVEL 0
#define DT_N_S_clocks_S_clkmux_COMPAT_MATCHES_wch_ch57x_clkmux 1
#define DT_N_S_clocks_S_clkmux_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clkmux_COMPAT_VENDOR_IDX_0 "Nanjing Qinheng Microelectronics Co., Ltd."
#define DT_N_S_clocks_S_clkmux_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clkmux_COMPAT_MODEL_IDX_0 "ch57x-clkmux"
#define DT_N_S_clocks_S_clkmux_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clkmux_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clkmux_P_wakeup_source 0
#define DT_N_S_clocks_S_clkmux_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_clkmux_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_clkmux_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_clocks_S_clkmux_P_compatible {"wch,ch57x-clkmux"}
#define DT_N_S_clocks_S_clkmux_P_compatible_IDX_0 "wch,ch57x-clkmux"
#define DT_N_S_clocks_S_clkmux_P_compatible_IDX_0_STRING_UNQUOTED wch,ch57x-clkmux
#define DT_N_S_clocks_S_clkmux_P_compatible_IDX_0_STRING_TOKEN wch_ch57x_clkmux
#define DT_N_S_clocks_S_clkmux_P_compatible_IDX_0_STRING_UPPER_TOKEN WCH_CH57X_CLKMUX
#define DT_N_S_clocks_S_clkmux_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clkmux_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clkmux, compatible, 0)
#define DT_N_S_clocks_S_clkmux_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clkmux, compatible, 0)
#define DT_N_S_clocks_S_clkmux_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clkmux, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clkmux_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clkmux, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clkmux_P_compatible_LEN 1
#define DT_N_S_clocks_S_clkmux_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_clkmux_P_zephyr_deferred_init 0
#define DT_N_S_clocks_S_clkmux_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_clocks_S_clkmux_P_clock_frequency 60000000
#define DT_N_S_clocks_S_clkmux_P_clock_frequency_ENUM_IDX 14
#define DT_N_S_clocks_S_clkmux_P_clock_frequency_ENUM_VAL_60000000_EXISTS 1
#define DT_N_S_clocks_S_clkmux_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /soc/pfic@e000e000
 *
 * Node identifier: DT_N_S_soc_S_pfic_e000e000
 *
 * Binding (compatible = wch,ch32v-pfic):
 *   $ZEPHYR_BASE/dts/bindings/interrupt-controller/wch,ch32v-pfic.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pfic_e000e000_PATH "/soc/pfic@e000e000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pfic_e000e000_FULL_NAME "pfic@e000e000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pfic_e000e000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pfic_e000e000_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pfic_e000e000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pfic_e000e000_FOREACH_NODELABEL(fn) fn(pfic)
#define DT_N_S_soc_S_pfic_e000e000_FOREACH_NODELABEL_VARGS(fn, ...) fn(pfic, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pfic_e000e000_CHILD_NUM 0
#define DT_N_S_soc_S_pfic_e000e000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pfic_e000e000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pfic_e000e000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pfic_e000e000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pfic_e000e000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pfic_e000e000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pfic_e000e000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pfic_e000e000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pfic_e000e000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pfic_e000e000_ORD 8
#define DT_N_S_soc_S_pfic_e000e000_ORD_STR_SORTABLE 00008

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pfic_e000e000_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pfic_e000e000_SUPPORTS_ORDS \
	9, /* /soc/gpio@400010a0 */ \
	10, /* /soc/gpio@400010c0 */ \
	23, /* /soc/systick@e000f000 */ \
	25, /* /soc/uart@40003000 */ \
	27, /* /soc/uart@40003400 */ \
	28, /* /soc/udc@40008400 */ \
	41, /* /soc/udc@40008000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pfic_e000e000_EXISTS 1
#define DT_N_INST_0_wch_ch32v_pfic DT_N_S_soc_S_pfic_e000e000
#define DT_N_NODELABEL_pfic        DT_N_S_soc_S_pfic_e000e000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pfic_e000e000_REG_NUM 1
#define DT_N_S_soc_S_pfic_e000e000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pfic_e000e000_REG_IDX_0_VAL_ADDRESS 3758153728 /* 0xe000e000 */
#define DT_N_S_soc_S_pfic_e000e000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_pfic_e000e000_RANGES_NUM 0
#define DT_N_S_soc_S_pfic_e000e000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pfic_e000e000_IRQ_NUM 0
#define DT_N_S_soc_S_pfic_e000e000_IRQ_LEVEL 0
#define DT_N_S_soc_S_pfic_e000e000_COMPAT_MATCHES_wch_ch32v_pfic 1
#define DT_N_S_soc_S_pfic_e000e000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pfic_e000e000_COMPAT_VENDOR_IDX_0 "Nanjing Qinheng Microelectronics Co., Ltd."
#define DT_N_S_soc_S_pfic_e000e000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pfic_e000e000_COMPAT_MODEL_IDX_0 "ch32v-pfic"
#define DT_N_S_soc_S_pfic_e000e000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pfic_e000e000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pfic_e000e000_P_interrupt_controller 1
#define DT_N_S_soc_S_pfic_e000e000_P_interrupt_controller_EXISTS 1
#define DT_N_S_soc_S_pfic_e000e000_P_wakeup_source 0
#define DT_N_S_soc_S_pfic_e000e000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pfic_e000e000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pfic_e000e000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_pfic_e000e000_P_compatible {"wch,ch32v-pfic"}
#define DT_N_S_soc_S_pfic_e000e000_P_compatible_IDX_0 "wch,ch32v-pfic"
#define DT_N_S_soc_S_pfic_e000e000_P_compatible_IDX_0_STRING_UNQUOTED wch,ch32v-pfic
#define DT_N_S_soc_S_pfic_e000e000_P_compatible_IDX_0_STRING_TOKEN wch_ch32v_pfic
#define DT_N_S_soc_S_pfic_e000e000_P_compatible_IDX_0_STRING_UPPER_TOKEN WCH_CH32V_PFIC
#define DT_N_S_soc_S_pfic_e000e000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pfic_e000e000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pfic_e000e000, compatible, 0)
#define DT_N_S_soc_S_pfic_e000e000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pfic_e000e000, compatible, 0)
#define DT_N_S_soc_S_pfic_e000e000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pfic_e000e000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pfic_e000e000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pfic_e000e000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pfic_e000e000_P_compatible_LEN 1
#define DT_N_S_soc_S_pfic_e000e000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pfic_e000e000_P_reg {3758153728 /* 0xe000e000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_pfic_e000e000_P_reg_IDX_0 3758153728
#define DT_N_S_soc_S_pfic_e000e000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pfic_e000e000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_pfic_e000e000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pfic_e000e000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pfic_e000e000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pfic_e000e000_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/gpio@400010a0
 *
 * Node identifier: DT_N_S_soc_S_gpio_400010a0
 *
 * Binding (compatible = wch,ch57x-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/wch,ch57x-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_400010a0_PATH "/soc/gpio@400010a0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_400010a0_FULL_NAME "gpio@400010a0"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpio_400010a0_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpio_400010a0_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_gpio_400010a0_NODELABEL_NUM 1
#define DT_N_S_soc_S_gpio_400010a0_FOREACH_NODELABEL(fn) fn(gpioa)
#define DT_N_S_soc_S_gpio_400010a0_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpioa, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpio_400010a0_CHILD_NUM 0
#define DT_N_S_soc_S_gpio_400010a0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_gpio_400010a0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpio_400010a0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_400010a0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_400010a0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpio_400010a0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpio_400010a0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_400010a0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_400010a0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_400010a0_ORD 9
#define DT_N_S_soc_S_gpio_400010a0_ORD_STR_SORTABLE 00009

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_400010a0_REQUIRES_ORDS \
	5, /* /soc */ \
	8, /* /soc/pfic@e000e000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_400010a0_SUPPORTS_ORDS \
	12, /* /soc/system-controller@40001000/pin-controller */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_400010a0_EXISTS 1
#define DT_N_INST_0_wch_ch57x_gpio DT_N_S_soc_S_gpio_400010a0
#define DT_N_NODELABEL_gpioa       DT_N_S_soc_S_gpio_400010a0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_400010a0_REG_NUM 1
#define DT_N_S_soc_S_gpio_400010a0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400010a0_REG_IDX_0_VAL_ADDRESS 1073746080 /* 0x400010a0 */
#define DT_N_S_soc_S_gpio_400010a0_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_gpio_400010a0_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_400010a0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_400010a0_IRQ_NUM 1
#define DT_N_S_soc_S_gpio_400010a0_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400010a0_IRQ_IDX_0_VAL_irq 17
#define DT_N_S_soc_S_gpio_400010a0_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_400010a0_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400010a0_IRQ_IDX_0_VAL_priority 3
#define DT_N_S_soc_S_gpio_400010a0_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_400010a0_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_pfic_e000e000
#define DT_N_S_soc_S_gpio_400010a0_IRQ_LEVEL 1
#define DT_N_S_soc_S_gpio_400010a0_COMPAT_MATCHES_wch_ch57x_gpio 1
#define DT_N_S_soc_S_gpio_400010a0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400010a0_COMPAT_VENDOR_IDX_0 "Nanjing Qinheng Microelectronics Co., Ltd."
#define DT_N_S_soc_S_gpio_400010a0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400010a0_COMPAT_MODEL_IDX_0 "ch57x-gpio"
#define DT_N_S_soc_S_gpio_400010a0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_400010a0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_400010a0_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_400010a0_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_400010a0_P_ngpios 16
#define DT_N_S_soc_S_gpio_400010a0_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_400010a0_P_gpio_reserved_ranges {0 /* 0x0 */, 4 /* 0x4 */, 6 /* 0x6 */, 2 /* 0x2 */}
#define DT_N_S_soc_S_gpio_400010a0_P_gpio_reserved_ranges_IDX_0 0
#define DT_N_S_soc_S_gpio_400010a0_P_gpio_reserved_ranges_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400010a0_P_gpio_reserved_ranges_IDX_1 4
#define DT_N_S_soc_S_gpio_400010a0_P_gpio_reserved_ranges_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_400010a0_P_gpio_reserved_ranges_IDX_2 6
#define DT_N_S_soc_S_gpio_400010a0_P_gpio_reserved_ranges_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_400010a0_P_gpio_reserved_ranges_IDX_3 2
#define DT_N_S_soc_S_gpio_400010a0_P_gpio_reserved_ranges_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_400010a0_P_gpio_reserved_ranges_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_400010a0, gpio_reserved_ranges, 0) \
	fn(DT_N_S_soc_S_gpio_400010a0, gpio_reserved_ranges, 1) \
	fn(DT_N_S_soc_S_gpio_400010a0, gpio_reserved_ranges, 2) \
	fn(DT_N_S_soc_S_gpio_400010a0, gpio_reserved_ranges, 3)
#define DT_N_S_soc_S_gpio_400010a0_P_gpio_reserved_ranges_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_400010a0, gpio_reserved_ranges, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_400010a0, gpio_reserved_ranges, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_400010a0, gpio_reserved_ranges, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_400010a0, gpio_reserved_ranges, 3)
#define DT_N_S_soc_S_gpio_400010a0_P_gpio_reserved_ranges_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_400010a0, gpio_reserved_ranges, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_400010a0, gpio_reserved_ranges, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_400010a0, gpio_reserved_ranges, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_400010a0, gpio_reserved_ranges, 3, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400010a0_P_gpio_reserved_ranges_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_400010a0, gpio_reserved_ranges, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_400010a0, gpio_reserved_ranges, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_400010a0, gpio_reserved_ranges, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_400010a0, gpio_reserved_ranges, 3, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400010a0_P_gpio_reserved_ranges_LEN 4
#define DT_N_S_soc_S_gpio_400010a0_P_gpio_reserved_ranges_EXISTS 1
#define DT_N_S_soc_S_gpio_400010a0_P_wakeup_source 0
#define DT_N_S_soc_S_gpio_400010a0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_gpio_400010a0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_gpio_400010a0_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_gpio_400010a0_P_compatible {"wch,ch57x-gpio"}
#define DT_N_S_soc_S_gpio_400010a0_P_compatible_IDX_0 "wch,ch57x-gpio"
#define DT_N_S_soc_S_gpio_400010a0_P_compatible_IDX_0_STRING_UNQUOTED wch,ch57x-gpio
#define DT_N_S_soc_S_gpio_400010a0_P_compatible_IDX_0_STRING_TOKEN wch_ch57x_gpio
#define DT_N_S_soc_S_gpio_400010a0_P_compatible_IDX_0_STRING_UPPER_TOKEN WCH_CH57X_GPIO
#define DT_N_S_soc_S_gpio_400010a0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400010a0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_400010a0, compatible, 0)
#define DT_N_S_soc_S_gpio_400010a0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_400010a0, compatible, 0)
#define DT_N_S_soc_S_gpio_400010a0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_400010a0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400010a0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_400010a0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400010a0_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_400010a0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_400010a0_P_reg {1073746080 /* 0x400010a0 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_gpio_400010a0_P_reg_IDX_0 1073746080
#define DT_N_S_soc_S_gpio_400010a0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400010a0_P_reg_IDX_1 32
#define DT_N_S_soc_S_gpio_400010a0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_400010a0_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_400010a0_P_interrupts {17 /* 0x11 */, 3 /* 0x3 */}
#define DT_N_S_soc_S_gpio_400010a0_P_interrupts_IDX_0 17
#define DT_N_S_soc_S_gpio_400010a0_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400010a0_P_interrupts_IDX_1 3
#define DT_N_S_soc_S_gpio_400010a0_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_400010a0_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_gpio_400010a0_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_gpio_400010a0_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/gpio@400010c0
 *
 * Node identifier: DT_N_S_soc_S_gpio_400010c0
 *
 * Binding (compatible = wch,ch57x-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/wch,ch57x-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_400010c0_PATH "/soc/gpio@400010c0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_400010c0_FULL_NAME "gpio@400010c0"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpio_400010c0_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpio_400010c0_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_gpio_400010c0_NODELABEL_NUM 1
#define DT_N_S_soc_S_gpio_400010c0_FOREACH_NODELABEL(fn) fn(gpiob)
#define DT_N_S_soc_S_gpio_400010c0_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpiob, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpio_400010c0_CHILD_NUM 0
#define DT_N_S_soc_S_gpio_400010c0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_gpio_400010c0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpio_400010c0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_400010c0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_400010c0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpio_400010c0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpio_400010c0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_400010c0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_400010c0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_400010c0_ORD 10
#define DT_N_S_soc_S_gpio_400010c0_ORD_STR_SORTABLE 00010

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_400010c0_REQUIRES_ORDS \
	5, /* /soc */ \
	8, /* /soc/pfic@e000e000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_400010c0_SUPPORTS_ORDS \
	12, /* /soc/system-controller@40001000/pin-controller */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_400010c0_EXISTS 1
#define DT_N_INST_1_wch_ch57x_gpio DT_N_S_soc_S_gpio_400010c0
#define DT_N_NODELABEL_gpiob       DT_N_S_soc_S_gpio_400010c0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_400010c0_REG_NUM 1
#define DT_N_S_soc_S_gpio_400010c0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400010c0_REG_IDX_0_VAL_ADDRESS 1073746112 /* 0x400010c0 */
#define DT_N_S_soc_S_gpio_400010c0_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_gpio_400010c0_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_400010c0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_400010c0_IRQ_NUM 1
#define DT_N_S_soc_S_gpio_400010c0_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400010c0_IRQ_IDX_0_VAL_irq 18
#define DT_N_S_soc_S_gpio_400010c0_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_400010c0_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400010c0_IRQ_IDX_0_VAL_priority 4
#define DT_N_S_soc_S_gpio_400010c0_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_400010c0_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_pfic_e000e000
#define DT_N_S_soc_S_gpio_400010c0_IRQ_LEVEL 1
#define DT_N_S_soc_S_gpio_400010c0_COMPAT_MATCHES_wch_ch57x_gpio 1
#define DT_N_S_soc_S_gpio_400010c0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400010c0_COMPAT_VENDOR_IDX_0 "Nanjing Qinheng Microelectronics Co., Ltd."
#define DT_N_S_soc_S_gpio_400010c0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400010c0_COMPAT_MODEL_IDX_0 "ch57x-gpio"
#define DT_N_S_soc_S_gpio_400010c0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_400010c0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_400010c0_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_400010c0_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_400010c0_P_ngpios 24
#define DT_N_S_soc_S_gpio_400010c0_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_400010c0_P_gpio_reserved_ranges {0 /* 0x0 */, 4 /* 0x4 */, 5 /* 0x5 */, 2 /* 0x2 */, 8 /* 0x8 */, 2 /* 0x2 */, 16 /* 0x10 */, 6 /* 0x6 */}
#define DT_N_S_soc_S_gpio_400010c0_P_gpio_reserved_ranges_IDX_0 0
#define DT_N_S_soc_S_gpio_400010c0_P_gpio_reserved_ranges_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400010c0_P_gpio_reserved_ranges_IDX_1 4
#define DT_N_S_soc_S_gpio_400010c0_P_gpio_reserved_ranges_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_400010c0_P_gpio_reserved_ranges_IDX_2 5
#define DT_N_S_soc_S_gpio_400010c0_P_gpio_reserved_ranges_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_400010c0_P_gpio_reserved_ranges_IDX_3 2
#define DT_N_S_soc_S_gpio_400010c0_P_gpio_reserved_ranges_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_400010c0_P_gpio_reserved_ranges_IDX_4 8
#define DT_N_S_soc_S_gpio_400010c0_P_gpio_reserved_ranges_IDX_4_EXISTS 1
#define DT_N_S_soc_S_gpio_400010c0_P_gpio_reserved_ranges_IDX_5 2
#define DT_N_S_soc_S_gpio_400010c0_P_gpio_reserved_ranges_IDX_5_EXISTS 1
#define DT_N_S_soc_S_gpio_400010c0_P_gpio_reserved_ranges_IDX_6 16
#define DT_N_S_soc_S_gpio_400010c0_P_gpio_reserved_ranges_IDX_6_EXISTS 1
#define DT_N_S_soc_S_gpio_400010c0_P_gpio_reserved_ranges_IDX_7 6
#define DT_N_S_soc_S_gpio_400010c0_P_gpio_reserved_ranges_IDX_7_EXISTS 1
#define DT_N_S_soc_S_gpio_400010c0_P_gpio_reserved_ranges_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_400010c0, gpio_reserved_ranges, 0) \
	fn(DT_N_S_soc_S_gpio_400010c0, gpio_reserved_ranges, 1) \
	fn(DT_N_S_soc_S_gpio_400010c0, gpio_reserved_ranges, 2) \
	fn(DT_N_S_soc_S_gpio_400010c0, gpio_reserved_ranges, 3) \
	fn(DT_N_S_soc_S_gpio_400010c0, gpio_reserved_ranges, 4) \
	fn(DT_N_S_soc_S_gpio_400010c0, gpio_reserved_ranges, 5) \
	fn(DT_N_S_soc_S_gpio_400010c0, gpio_reserved_ranges, 6) \
	fn(DT_N_S_soc_S_gpio_400010c0, gpio_reserved_ranges, 7)
#define DT_N_S_soc_S_gpio_400010c0_P_gpio_reserved_ranges_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_400010c0, gpio_reserved_ranges, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_400010c0, gpio_reserved_ranges, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_400010c0, gpio_reserved_ranges, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_400010c0, gpio_reserved_ranges, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_400010c0, gpio_reserved_ranges, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_400010c0, gpio_reserved_ranges, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_400010c0, gpio_reserved_ranges, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_400010c0, gpio_reserved_ranges, 7)
#define DT_N_S_soc_S_gpio_400010c0_P_gpio_reserved_ranges_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_400010c0, gpio_reserved_ranges, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_400010c0, gpio_reserved_ranges, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_400010c0, gpio_reserved_ranges, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_400010c0, gpio_reserved_ranges, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_400010c0, gpio_reserved_ranges, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_400010c0, gpio_reserved_ranges, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_400010c0, gpio_reserved_ranges, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_400010c0, gpio_reserved_ranges, 7, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400010c0_P_gpio_reserved_ranges_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_400010c0, gpio_reserved_ranges, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_400010c0, gpio_reserved_ranges, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_400010c0, gpio_reserved_ranges, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_400010c0, gpio_reserved_ranges, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_400010c0, gpio_reserved_ranges, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_400010c0, gpio_reserved_ranges, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_400010c0, gpio_reserved_ranges, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_400010c0, gpio_reserved_ranges, 7, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400010c0_P_gpio_reserved_ranges_LEN 8
#define DT_N_S_soc_S_gpio_400010c0_P_gpio_reserved_ranges_EXISTS 1
#define DT_N_S_soc_S_gpio_400010c0_P_wakeup_source 0
#define DT_N_S_soc_S_gpio_400010c0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_gpio_400010c0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_gpio_400010c0_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_gpio_400010c0_P_compatible {"wch,ch57x-gpio"}
#define DT_N_S_soc_S_gpio_400010c0_P_compatible_IDX_0 "wch,ch57x-gpio"
#define DT_N_S_soc_S_gpio_400010c0_P_compatible_IDX_0_STRING_UNQUOTED wch,ch57x-gpio
#define DT_N_S_soc_S_gpio_400010c0_P_compatible_IDX_0_STRING_TOKEN wch_ch57x_gpio
#define DT_N_S_soc_S_gpio_400010c0_P_compatible_IDX_0_STRING_UPPER_TOKEN WCH_CH57X_GPIO
#define DT_N_S_soc_S_gpio_400010c0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400010c0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_400010c0, compatible, 0)
#define DT_N_S_soc_S_gpio_400010c0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_400010c0, compatible, 0)
#define DT_N_S_soc_S_gpio_400010c0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_400010c0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400010c0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_400010c0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_400010c0_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_400010c0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_400010c0_P_reg {1073746112 /* 0x400010c0 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_gpio_400010c0_P_reg_IDX_0 1073746112
#define DT_N_S_soc_S_gpio_400010c0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400010c0_P_reg_IDX_1 32
#define DT_N_S_soc_S_gpio_400010c0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_400010c0_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_400010c0_P_interrupts {18 /* 0x12 */, 4 /* 0x4 */}
#define DT_N_S_soc_S_gpio_400010c0_P_interrupts_IDX_0 18
#define DT_N_S_soc_S_gpio_400010c0_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_400010c0_P_interrupts_IDX_1 4
#define DT_N_S_soc_S_gpio_400010c0_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_400010c0_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_gpio_400010c0_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_gpio_400010c0_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/system-controller@40001000
 *
 * Node identifier: DT_N_S_soc_S_system_controller_40001000
 */

/* Node's full path: */
#define DT_N_S_soc_S_system_controller_40001000_PATH "/soc/system-controller@40001000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_system_controller_40001000_FULL_NAME "system-controller@40001000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_system_controller_40001000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_system_controller_40001000_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_system_controller_40001000_NODELABEL_NUM 1
#define DT_N_S_soc_S_system_controller_40001000_FOREACH_NODELABEL(fn) fn(syscon)
#define DT_N_S_soc_S_system_controller_40001000_FOREACH_NODELABEL_VARGS(fn, ...) fn(syscon, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_system_controller_40001000_CHILD_NUM 1
#define DT_N_S_soc_S_system_controller_40001000_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_system_controller_40001000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller)
#define DT_N_S_soc_S_system_controller_40001000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller)
#define DT_N_S_soc_S_system_controller_40001000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller, __VA_ARGS__)
#define DT_N_S_soc_S_system_controller_40001000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller, __VA_ARGS__)
#define DT_N_S_soc_S_system_controller_40001000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller)
#define DT_N_S_soc_S_system_controller_40001000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller)
#define DT_N_S_soc_S_system_controller_40001000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller, __VA_ARGS__)
#define DT_N_S_soc_S_system_controller_40001000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_system_controller_40001000_ORD 11
#define DT_N_S_soc_S_system_controller_40001000_ORD_STR_SORTABLE 00011

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_system_controller_40001000_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_system_controller_40001000_SUPPORTS_ORDS \
	12, /* /soc/system-controller@40001000/pin-controller */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_system_controller_40001000_EXISTS 1
#define DT_N_NODELABEL_syscon DT_N_S_soc_S_system_controller_40001000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_system_controller_40001000_REG_NUM 1
#define DT_N_S_soc_S_system_controller_40001000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_REG_IDX_0_VAL_ADDRESS 1073745920 /* 0x40001000 */
#define DT_N_S_soc_S_system_controller_40001000_REG_IDX_0_VAL_SIZE 160 /* 0xa0 */
#define DT_N_S_soc_S_system_controller_40001000_RANGES_NUM 0
#define DT_N_S_soc_S_system_controller_40001000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_system_controller_40001000_IRQ_NUM 0
#define DT_N_S_soc_S_system_controller_40001000_IRQ_LEVEL 0
#define DT_N_S_soc_S_system_controller_40001000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_system_controller_40001000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_system_controller_40001000_P_reg {1073745920 /* 0x40001000 */, 160 /* 0xa0 */}
#define DT_N_S_soc_S_system_controller_40001000_P_reg_IDX_0 1073745920
#define DT_N_S_soc_S_system_controller_40001000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_P_reg_IDX_1 160
#define DT_N_S_soc_S_system_controller_40001000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/system-controller@40001000/pin-controller
 *
 * Node identifier: DT_N_S_soc_S_system_controller_40001000_S_pin_controller
 *
 * Binding (compatible = wch,ch5xx-pinctrl):
 *   $ZEPHYR_BASE/dts/bindings/pinctrl/wch,ch5xx-pinctrl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_PATH "/soc/system-controller@40001000/pin-controller"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_FULL_NAME "pin-controller"

/* Node parent (/soc/system-controller@40001000) identifier: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_PARENT DT_N_S_soc_S_system_controller_40001000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_NODELABEL_NUM 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_FOREACH_NODELABEL(fn) fn(pinctrl)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_FOREACH_NODELABEL_VARGS(fn, ...) fn(pinctrl, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_CHILD_NUM 3
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_CHILD_NUM_STATUS_OKAY 3
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default, __VA_ARGS__) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default, __VA_ARGS__) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default, __VA_ARGS__)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default, __VA_ARGS__)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default, __VA_ARGS__) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default, __VA_ARGS__) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default, __VA_ARGS__)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_ORD 12
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_ORD_STR_SORTABLE 00012

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_REQUIRES_ORDS \
	9, /* /soc/gpio@400010a0 */ \
	10, /* /soc/gpio@400010c0 */ \
	11, /* /soc/system-controller@40001000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_SUPPORTS_ORDS \
	13, /* /soc/system-controller@40001000/pin-controller/pwm_default */ \
	24, /* /soc/system-controller@40001000/pin-controller/uart0_default */ \
	26, /* /soc/system-controller@40001000/pin-controller/uart1_default */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_EXISTS 1
#define DT_N_INST_0_wch_ch5xx_pinctrl DT_N_S_soc_S_system_controller_40001000_S_pin_controller
#define DT_N_NODELABEL_pinctrl        DT_N_S_soc_S_system_controller_40001000_S_pin_controller

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_REG_NUM 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_RANGES_NUM 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_IRQ_NUM 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_IRQ_LEVEL 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_COMPAT_MATCHES_wch_ch5xx_pinctrl 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_COMPAT_VENDOR_IDX_0 "Nanjing Qinheng Microelectronics Co., Ltd."
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_COMPAT_MODEL_IDX_0 "ch5xx-pinctrl"
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_P_wakeup_source 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_P_compatible {"wch,ch5xx-pinctrl"}
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_P_compatible_IDX_0 "wch,ch5xx-pinctrl"
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_P_compatible_IDX_0_STRING_UNQUOTED wch,ch5xx-pinctrl
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_P_compatible_IDX_0_STRING_TOKEN wch_ch5xx_pinctrl
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_P_compatible_IDX_0_STRING_UPPER_TOKEN WCH_CH5XX_PINCTRL
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller, compatible, 0)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller, compatible, 0)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_P_compatible_LEN 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_P_compatible_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_P_gpio_controllers_IDX_0 DT_N_S_soc_S_gpio_400010a0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_P_gpio_controllers_IDX_0_PH DT_N_S_soc_S_gpio_400010a0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_P_gpio_controllers_IDX_0_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_P_gpio_controllers_IDX_1 DT_N_S_soc_S_gpio_400010c0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_P_gpio_controllers_IDX_1_PH DT_N_S_soc_S_gpio_400010c0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_P_gpio_controllers_IDX_1_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_P_gpio_controllers_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller, gpio_controllers, 0) \
	fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller, gpio_controllers, 1)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_P_gpio_controllers_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller, gpio_controllers, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller, gpio_controllers, 1)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_P_gpio_controllers_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller, gpio_controllers, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller, gpio_controllers, 1, __VA_ARGS__)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_P_gpio_controllers_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller, gpio_controllers, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller, gpio_controllers, 1, __VA_ARGS__)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_P_gpio_controllers_LEN 2
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_P_gpio_controllers_EXISTS 1

/*
 * Devicetree node: /soc/system-controller@40001000/pin-controller/pwm_default
 *
 * Node identifier: DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_PATH "/soc/system-controller@40001000/pin-controller/pwm_default"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_FULL_NAME "pwm_default"

/* Node parent (/soc/system-controller@40001000/pin-controller) identifier: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_PARENT DT_N_S_soc_S_system_controller_40001000_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_NODELABEL_NUM 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_FOREACH_NODELABEL(fn) fn(pwm_default)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(pwm_default, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_CHILD_NUM 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_ORD 13
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_ORD_STR_SORTABLE 00013

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_REQUIRES_ORDS \
	12, /* /soc/system-controller@40001000/pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_SUPPORTS_ORDS \
	14, /* /soc/pwm@40005000 */ \
	36, /* /soc/system-controller@40001000/pin-controller/pwm_default/group1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_EXISTS 1
#define DT_N_NODELABEL_pwm_default DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_REG_NUM 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_RANGES_NUM 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_IRQ_NUM 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_IRQ_LEVEL 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/pwm@40005000
 *
 * Node identifier: DT_N_S_soc_S_pwm_40005000
 *
 * Binding (compatible = wch,ch5xx-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/wch,ch5xx-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pwm_40005000_PATH "/soc/pwm@40005000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pwm_40005000_FULL_NAME "pwm@40005000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pwm_40005000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pwm_40005000_CHILD_IDX 11

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pwm_40005000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pwm_40005000_FOREACH_NODELABEL(fn) fn(pwm)
#define DT_N_S_soc_S_pwm_40005000_FOREACH_NODELABEL_VARGS(fn, ...) fn(pwm, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pwm_40005000_CHILD_NUM 0
#define DT_N_S_soc_S_pwm_40005000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pwm_40005000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pwm_40005000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_40005000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_40005000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pwm_40005000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pwm_40005000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_40005000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_40005000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pwm_40005000_ORD 14
#define DT_N_S_soc_S_pwm_40005000_ORD_STR_SORTABLE 00014

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pwm_40005000_REQUIRES_ORDS \
	5, /* /soc */ \
	7, /* /clocks/clkmux */ \
	13, /* /soc/system-controller@40001000/pin-controller/pwm_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pwm_40005000_SUPPORTS_ORDS \
	15, /* /pwmleds */ \
	16, /* /pwmleds/pwm_led_pa12 */ \
	17, /* /pwmleds/pwm_led_pa13 */ \
	18, /* /pwmleds/pwm_led_pb14 */ \
	19, /* /pwmleds/pwm_led_pb23 */ \
	20, /* /pwmleds/pwm_led_pb4 */ \
	21, /* /pwmleds/pwm_led_pb7 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pwm_40005000_EXISTS 1
#define DT_N_INST_0_wch_ch5xx_pwm DT_N_S_soc_S_pwm_40005000
#define DT_N_NODELABEL_pwm        DT_N_S_soc_S_pwm_40005000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pwm_40005000_REG_NUM 1
#define DT_N_S_soc_S_pwm_40005000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005000_REG_IDX_0_VAL_ADDRESS 1073762304 /* 0x40005000 */
#define DT_N_S_soc_S_pwm_40005000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pwm_40005000_RANGES_NUM 0
#define DT_N_S_soc_S_pwm_40005000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pwm_40005000_IRQ_NUM 0
#define DT_N_S_soc_S_pwm_40005000_IRQ_LEVEL 0
#define DT_N_S_soc_S_pwm_40005000_COMPAT_MATCHES_wch_ch5xx_pwm 1
#define DT_N_S_soc_S_pwm_40005000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005000_COMPAT_VENDOR_IDX_0 "Nanjing Qinheng Microelectronics Co., Ltd."
#define DT_N_S_soc_S_pwm_40005000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005000_COMPAT_MODEL_IDX_0 "ch5xx-pwm"
#define DT_N_S_soc_S_pwm_40005000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pwm_40005000_PINCTRL_NUM 1
#define DT_N_S_soc_S_pwm_40005000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_pwm_40005000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_pwm_40005000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_pwm_40005000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_pwm_40005000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default

/* Generic property macros: */
#define DT_N_S_soc_S_pwm_40005000_P_wakeup_source 0
#define DT_N_S_soc_S_pwm_40005000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pwm_40005000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pwm_40005000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_pwm_40005000_P_status "okay"
#define DT_N_S_soc_S_pwm_40005000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_pwm_40005000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_pwm_40005000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pwm_40005000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_pwm_40005000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_pwm_40005000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_pwm_40005000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_pwm_40005000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pwm_40005000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40005000, status, 0)
#define DT_N_S_soc_S_pwm_40005000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40005000, status, 0)
#define DT_N_S_soc_S_pwm_40005000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40005000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40005000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005000_P_status_LEN 1
#define DT_N_S_soc_S_pwm_40005000_P_status_EXISTS 1
#define DT_N_S_soc_S_pwm_40005000_P_compatible {"wch,ch5xx-pwm"}
#define DT_N_S_soc_S_pwm_40005000_P_compatible_IDX_0 "wch,ch5xx-pwm"
#define DT_N_S_soc_S_pwm_40005000_P_compatible_IDX_0_STRING_UNQUOTED wch,ch5xx-pwm
#define DT_N_S_soc_S_pwm_40005000_P_compatible_IDX_0_STRING_TOKEN wch_ch5xx_pwm
#define DT_N_S_soc_S_pwm_40005000_P_compatible_IDX_0_STRING_UPPER_TOKEN WCH_CH5XX_PWM
#define DT_N_S_soc_S_pwm_40005000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40005000, compatible, 0)
#define DT_N_S_soc_S_pwm_40005000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40005000, compatible, 0)
#define DT_N_S_soc_S_pwm_40005000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40005000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40005000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005000_P_compatible_LEN 1
#define DT_N_S_soc_S_pwm_40005000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pwm_40005000_P_reg {1073762304 /* 0x40005000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pwm_40005000_P_reg_IDX_0 1073762304
#define DT_N_S_soc_S_pwm_40005000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pwm_40005000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_40005000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pwm_40005000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005000_P_clocks_IDX_0_PH DT_N_S_clocks_S_clkmux
#define DT_N_S_soc_S_pwm_40005000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40005000, clocks, 0)
#define DT_N_S_soc_S_pwm_40005000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40005000, clocks, 0)
#define DT_N_S_soc_S_pwm_40005000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40005000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40005000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005000_P_clocks_LEN 1
#define DT_N_S_soc_S_pwm_40005000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pwm_40005000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pwm_40005000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pwm_40005000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default
#define DT_N_S_soc_S_pwm_40005000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default
#define DT_N_S_soc_S_pwm_40005000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40005000, pinctrl_0, 0)
#define DT_N_S_soc_S_pwm_40005000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40005000, pinctrl_0, 0)
#define DT_N_S_soc_S_pwm_40005000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40005000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40005000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_pwm_40005000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_pwm_40005000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_pwm_40005000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_pwm_40005000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_pwm_40005000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_pwm_40005000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40005000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40005000, pinctrl_names, 0)
#define DT_N_S_soc_S_pwm_40005000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40005000, pinctrl_names, 0)
#define DT_N_S_soc_S_pwm_40005000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40005000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40005000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40005000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_pwm_40005000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_pwm_40005000_P_prescaler 25
#define DT_N_S_soc_S_pwm_40005000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_pwm_40005000_P_period 256
#define DT_N_S_soc_S_pwm_40005000_P_period_ENUM_IDX 7
#define DT_N_S_soc_S_pwm_40005000_P_period_ENUM_VAL_256_EXISTS 1
#define DT_N_S_soc_S_pwm_40005000_P_period_EXISTS 1

/*
 * Devicetree node: /pwmleds
 *
 * Node identifier: DT_N_S_pwmleds
 *
 * Binding (compatible = pwm-leds):
 *   $ZEPHYR_BASE/dts/bindings/led/pwm-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pwmleds_PATH "/pwmleds"

/* Node's name with unit-address: */
#define DT_N_S_pwmleds_FULL_NAME "pwmleds"

/* Node parent (/) identifier: */
#define DT_N_S_pwmleds_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_pwmleds_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_pwmleds_NODELABEL_NUM 0
#define DT_N_S_pwmleds_FOREACH_NODELABEL(fn) 
#define DT_N_S_pwmleds_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_pwmleds_CHILD_NUM 6
#define DT_N_S_pwmleds_CHILD_NUM_STATUS_OKAY 6
#define DT_N_S_pwmleds_FOREACH_CHILD(fn) fn(DT_N_S_pwmleds_S_pwm_led_pb7) fn(DT_N_S_pwmleds_S_pwm_led_pa13) fn(DT_N_S_pwmleds_S_pwm_led_pa12) fn(DT_N_S_pwmleds_S_pwm_led_pb4) fn(DT_N_S_pwmleds_S_pwm_led_pb23) fn(DT_N_S_pwmleds_S_pwm_led_pb14)
#define DT_N_S_pwmleds_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pwmleds_S_pwm_led_pb7) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds_S_pwm_led_pa13) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds_S_pwm_led_pa12) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds_S_pwm_led_pb4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds_S_pwm_led_pb23) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds_S_pwm_led_pb14)
#define DT_N_S_pwmleds_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pwmleds_S_pwm_led_pb7, __VA_ARGS__) fn(DT_N_S_pwmleds_S_pwm_led_pa13, __VA_ARGS__) fn(DT_N_S_pwmleds_S_pwm_led_pa12, __VA_ARGS__) fn(DT_N_S_pwmleds_S_pwm_led_pb4, __VA_ARGS__) fn(DT_N_S_pwmleds_S_pwm_led_pb23, __VA_ARGS__) fn(DT_N_S_pwmleds_S_pwm_led_pb14, __VA_ARGS__)
#define DT_N_S_pwmleds_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwmleds_S_pwm_led_pb7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds_S_pwm_led_pa13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds_S_pwm_led_pa12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds_S_pwm_led_pb4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds_S_pwm_led_pb23, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds_S_pwm_led_pb14, __VA_ARGS__)
#define DT_N_S_pwmleds_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pwmleds_S_pwm_led_pb7) fn(DT_N_S_pwmleds_S_pwm_led_pa13) fn(DT_N_S_pwmleds_S_pwm_led_pa12) fn(DT_N_S_pwmleds_S_pwm_led_pb4) fn(DT_N_S_pwmleds_S_pwm_led_pb23) fn(DT_N_S_pwmleds_S_pwm_led_pb14)
#define DT_N_S_pwmleds_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pwmleds_S_pwm_led_pb7) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds_S_pwm_led_pa13) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds_S_pwm_led_pa12) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds_S_pwm_led_pb4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds_S_pwm_led_pb23) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds_S_pwm_led_pb14)
#define DT_N_S_pwmleds_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pwmleds_S_pwm_led_pb7, __VA_ARGS__) fn(DT_N_S_pwmleds_S_pwm_led_pa13, __VA_ARGS__) fn(DT_N_S_pwmleds_S_pwm_led_pa12, __VA_ARGS__) fn(DT_N_S_pwmleds_S_pwm_led_pb4, __VA_ARGS__) fn(DT_N_S_pwmleds_S_pwm_led_pb23, __VA_ARGS__) fn(DT_N_S_pwmleds_S_pwm_led_pb14, __VA_ARGS__)
#define DT_N_S_pwmleds_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwmleds_S_pwm_led_pb7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds_S_pwm_led_pa13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds_S_pwm_led_pa12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds_S_pwm_led_pb4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds_S_pwm_led_pb23, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwmleds_S_pwm_led_pb14, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pwmleds_ORD 15
#define DT_N_S_pwmleds_ORD_STR_SORTABLE 00015

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pwmleds_REQUIRES_ORDS \
	0, /* / */ \
	14, /* /soc/pwm@40005000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pwmleds_SUPPORTS_ORDS \
	16, /* /pwmleds/pwm_led_pa12 */ \
	17, /* /pwmleds/pwm_led_pa13 */ \
	18, /* /pwmleds/pwm_led_pb14 */ \
	19, /* /pwmleds/pwm_led_pb23 */ \
	20, /* /pwmleds/pwm_led_pb4 */ \
	21, /* /pwmleds/pwm_led_pb7 */

/* Existence and alternate IDs: */
#define DT_N_S_pwmleds_EXISTS 1
#define DT_N_INST_0_pwm_leds DT_N_S_pwmleds

/* Macros for properties that are special in the specification: */
#define DT_N_S_pwmleds_REG_NUM 0
#define DT_N_S_pwmleds_RANGES_NUM 0
#define DT_N_S_pwmleds_FOREACH_RANGE(fn) 
#define DT_N_S_pwmleds_IRQ_NUM 0
#define DT_N_S_pwmleds_IRQ_LEVEL 0
#define DT_N_S_pwmleds_COMPAT_MATCHES_pwm_leds 1
#define DT_N_S_pwmleds_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pwmleds_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pwmleds_P_compatible {"pwm-leds"}
#define DT_N_S_pwmleds_P_compatible_IDX_0 "pwm-leds"
#define DT_N_S_pwmleds_P_compatible_IDX_0_STRING_UNQUOTED pwm-leds
#define DT_N_S_pwmleds_P_compatible_IDX_0_STRING_TOKEN pwm_leds
#define DT_N_S_pwmleds_P_compatible_IDX_0_STRING_UPPER_TOKEN PWM_LEDS
#define DT_N_S_pwmleds_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_pwmleds_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwmleds, compatible, 0)
#define DT_N_S_pwmleds_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pwmleds, compatible, 0)
#define DT_N_S_pwmleds_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pwmleds, compatible, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwmleds, compatible, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_P_compatible_LEN 1
#define DT_N_S_pwmleds_P_compatible_EXISTS 1

/*
 * Devicetree node: /pwmleds/pwm_led_pa12
 *
 * Node identifier: DT_N_S_pwmleds_S_pwm_led_pa12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pwmleds_S_pwm_led_pa12_PATH "/pwmleds/pwm_led_pa12"

/* Node's name with unit-address: */
#define DT_N_S_pwmleds_S_pwm_led_pa12_FULL_NAME "pwm_led_pa12"

/* Node parent (/pwmleds) identifier: */
#define DT_N_S_pwmleds_S_pwm_led_pa12_PARENT DT_N_S_pwmleds

/* Node's index in its parent's list of children: */
#define DT_N_S_pwmleds_S_pwm_led_pa12_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_pwmleds_S_pwm_led_pa12_NODELABEL_NUM 1
#define DT_N_S_pwmleds_S_pwm_led_pa12_FOREACH_NODELABEL(fn) fn(front_led_blue)
#define DT_N_S_pwmleds_S_pwm_led_pa12_FOREACH_NODELABEL_VARGS(fn, ...) fn(front_led_blue, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pwmleds_S_pwm_led_pa12_CHILD_NUM 0
#define DT_N_S_pwmleds_S_pwm_led_pa12_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pwmleds_S_pwm_led_pa12_FOREACH_CHILD(fn) 
#define DT_N_S_pwmleds_S_pwm_led_pa12_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pwmleds_S_pwm_led_pa12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pwmleds_S_pwm_led_pa12_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pwmleds_S_pwm_led_pa12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pwmleds_S_pwm_led_pa12_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pwmleds_S_pwm_led_pa12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pwmleds_S_pwm_led_pa12_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pwmleds_S_pwm_led_pa12_ORD 16
#define DT_N_S_pwmleds_S_pwm_led_pa12_ORD_STR_SORTABLE 00016

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pwmleds_S_pwm_led_pa12_REQUIRES_ORDS \
	14, /* /soc/pwm@40005000 */ \
	15, /* /pwmleds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pwmleds_S_pwm_led_pa12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pwmleds_S_pwm_led_pa12_EXISTS 1
#define DT_N_NODELABEL_front_led_blue DT_N_S_pwmleds_S_pwm_led_pa12

/* Macros for properties that are special in the specification: */
#define DT_N_S_pwmleds_S_pwm_led_pa12_REG_NUM 0
#define DT_N_S_pwmleds_S_pwm_led_pa12_RANGES_NUM 0
#define DT_N_S_pwmleds_S_pwm_led_pa12_FOREACH_RANGE(fn) 
#define DT_N_S_pwmleds_S_pwm_led_pa12_IRQ_NUM 0
#define DT_N_S_pwmleds_S_pwm_led_pa12_IRQ_LEVEL 0
#define DT_N_S_pwmleds_S_pwm_led_pa12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pwmleds_S_pwm_led_pa12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pwmleds_S_pwm_led_pa12_P_pwms_IDX_0_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_pa12_P_pwms_IDX_0_PH DT_N_S_soc_S_pwm_40005000
#define DT_N_S_pwmleds_S_pwm_led_pa12_P_pwms_IDX_0_VAL_channel 4
#define DT_N_S_pwmleds_S_pwm_led_pa12_P_pwms_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_pa12_P_pwms_IDX_0_VAL_period 107000
#define DT_N_S_pwmleds_S_pwm_led_pa12_P_pwms_IDX_0_VAL_period_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_pa12_P_pwms_IDX_0_VAL_flags 0
#define DT_N_S_pwmleds_S_pwm_led_pa12_P_pwms_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_pa12_P_pwms_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwmleds_S_pwm_led_pa12, pwms, 0)
#define DT_N_S_pwmleds_S_pwm_led_pa12_P_pwms_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pwmleds_S_pwm_led_pa12, pwms, 0)
#define DT_N_S_pwmleds_S_pwm_led_pa12_P_pwms_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pwmleds_S_pwm_led_pa12, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_pwm_led_pa12_P_pwms_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwmleds_S_pwm_led_pa12, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_pwm_led_pa12_P_pwms_LEN 1
#define DT_N_S_pwmleds_S_pwm_led_pa12_P_pwms_EXISTS 1

/*
 * Devicetree node: /pwmleds/pwm_led_pa13
 *
 * Node identifier: DT_N_S_pwmleds_S_pwm_led_pa13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pwmleds_S_pwm_led_pa13_PATH "/pwmleds/pwm_led_pa13"

/* Node's name with unit-address: */
#define DT_N_S_pwmleds_S_pwm_led_pa13_FULL_NAME "pwm_led_pa13"

/* Node parent (/pwmleds) identifier: */
#define DT_N_S_pwmleds_S_pwm_led_pa13_PARENT DT_N_S_pwmleds

/* Node's index in its parent's list of children: */
#define DT_N_S_pwmleds_S_pwm_led_pa13_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_pwmleds_S_pwm_led_pa13_NODELABEL_NUM 1
#define DT_N_S_pwmleds_S_pwm_led_pa13_FOREACH_NODELABEL(fn) fn(front_led_green)
#define DT_N_S_pwmleds_S_pwm_led_pa13_FOREACH_NODELABEL_VARGS(fn, ...) fn(front_led_green, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pwmleds_S_pwm_led_pa13_CHILD_NUM 0
#define DT_N_S_pwmleds_S_pwm_led_pa13_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pwmleds_S_pwm_led_pa13_FOREACH_CHILD(fn) 
#define DT_N_S_pwmleds_S_pwm_led_pa13_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pwmleds_S_pwm_led_pa13_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pwmleds_S_pwm_led_pa13_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pwmleds_S_pwm_led_pa13_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pwmleds_S_pwm_led_pa13_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pwmleds_S_pwm_led_pa13_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pwmleds_S_pwm_led_pa13_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pwmleds_S_pwm_led_pa13_ORD 17
#define DT_N_S_pwmleds_S_pwm_led_pa13_ORD_STR_SORTABLE 00017

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pwmleds_S_pwm_led_pa13_REQUIRES_ORDS \
	14, /* /soc/pwm@40005000 */ \
	15, /* /pwmleds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pwmleds_S_pwm_led_pa13_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pwmleds_S_pwm_led_pa13_EXISTS 1
#define DT_N_ALIAS_pwm_led0            DT_N_S_pwmleds_S_pwm_led_pa13
#define DT_N_NODELABEL_front_led_green DT_N_S_pwmleds_S_pwm_led_pa13

/* Macros for properties that are special in the specification: */
#define DT_N_S_pwmleds_S_pwm_led_pa13_REG_NUM 0
#define DT_N_S_pwmleds_S_pwm_led_pa13_RANGES_NUM 0
#define DT_N_S_pwmleds_S_pwm_led_pa13_FOREACH_RANGE(fn) 
#define DT_N_S_pwmleds_S_pwm_led_pa13_IRQ_NUM 0
#define DT_N_S_pwmleds_S_pwm_led_pa13_IRQ_LEVEL 0
#define DT_N_S_pwmleds_S_pwm_led_pa13_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pwmleds_S_pwm_led_pa13_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pwmleds_S_pwm_led_pa13_P_pwms_IDX_0_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_pa13_P_pwms_IDX_0_PH DT_N_S_soc_S_pwm_40005000
#define DT_N_S_pwmleds_S_pwm_led_pa13_P_pwms_IDX_0_VAL_channel 5
#define DT_N_S_pwmleds_S_pwm_led_pa13_P_pwms_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_pa13_P_pwms_IDX_0_VAL_period 107000
#define DT_N_S_pwmleds_S_pwm_led_pa13_P_pwms_IDX_0_VAL_period_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_pa13_P_pwms_IDX_0_VAL_flags 0
#define DT_N_S_pwmleds_S_pwm_led_pa13_P_pwms_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_pa13_P_pwms_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwmleds_S_pwm_led_pa13, pwms, 0)
#define DT_N_S_pwmleds_S_pwm_led_pa13_P_pwms_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pwmleds_S_pwm_led_pa13, pwms, 0)
#define DT_N_S_pwmleds_S_pwm_led_pa13_P_pwms_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pwmleds_S_pwm_led_pa13, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_pwm_led_pa13_P_pwms_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwmleds_S_pwm_led_pa13, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_pwm_led_pa13_P_pwms_LEN 1
#define DT_N_S_pwmleds_S_pwm_led_pa13_P_pwms_EXISTS 1

/*
 * Devicetree node: /pwmleds/pwm_led_pb14
 *
 * Node identifier: DT_N_S_pwmleds_S_pwm_led_pb14
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pwmleds_S_pwm_led_pb14_PATH "/pwmleds/pwm_led_pb14"

/* Node's name with unit-address: */
#define DT_N_S_pwmleds_S_pwm_led_pb14_FULL_NAME "pwm_led_pb14"

/* Node parent (/pwmleds) identifier: */
#define DT_N_S_pwmleds_S_pwm_led_pb14_PARENT DT_N_S_pwmleds

/* Node's index in its parent's list of children: */
#define DT_N_S_pwmleds_S_pwm_led_pb14_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_pwmleds_S_pwm_led_pb14_NODELABEL_NUM 1
#define DT_N_S_pwmleds_S_pwm_led_pb14_FOREACH_NODELABEL(fn) fn(top_led_blue)
#define DT_N_S_pwmleds_S_pwm_led_pb14_FOREACH_NODELABEL_VARGS(fn, ...) fn(top_led_blue, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pwmleds_S_pwm_led_pb14_CHILD_NUM 0
#define DT_N_S_pwmleds_S_pwm_led_pb14_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pwmleds_S_pwm_led_pb14_FOREACH_CHILD(fn) 
#define DT_N_S_pwmleds_S_pwm_led_pb14_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pwmleds_S_pwm_led_pb14_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pwmleds_S_pwm_led_pb14_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pwmleds_S_pwm_led_pb14_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pwmleds_S_pwm_led_pb14_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pwmleds_S_pwm_led_pb14_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pwmleds_S_pwm_led_pb14_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pwmleds_S_pwm_led_pb14_ORD 18
#define DT_N_S_pwmleds_S_pwm_led_pb14_ORD_STR_SORTABLE 00018

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pwmleds_S_pwm_led_pb14_REQUIRES_ORDS \
	14, /* /soc/pwm@40005000 */ \
	15, /* /pwmleds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pwmleds_S_pwm_led_pb14_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pwmleds_S_pwm_led_pb14_EXISTS 1
#define DT_N_NODELABEL_top_led_blue DT_N_S_pwmleds_S_pwm_led_pb14

/* Macros for properties that are special in the specification: */
#define DT_N_S_pwmleds_S_pwm_led_pb14_REG_NUM 0
#define DT_N_S_pwmleds_S_pwm_led_pb14_RANGES_NUM 0
#define DT_N_S_pwmleds_S_pwm_led_pb14_FOREACH_RANGE(fn) 
#define DT_N_S_pwmleds_S_pwm_led_pb14_IRQ_NUM 0
#define DT_N_S_pwmleds_S_pwm_led_pb14_IRQ_LEVEL 0
#define DT_N_S_pwmleds_S_pwm_led_pb14_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pwmleds_S_pwm_led_pb14_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pwmleds_S_pwm_led_pb14_P_pwms_IDX_0_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_pb14_P_pwms_IDX_0_PH DT_N_S_soc_S_pwm_40005000
#define DT_N_S_pwmleds_S_pwm_led_pb14_P_pwms_IDX_0_VAL_channel 10
#define DT_N_S_pwmleds_S_pwm_led_pb14_P_pwms_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_pb14_P_pwms_IDX_0_VAL_period 107000
#define DT_N_S_pwmleds_S_pwm_led_pb14_P_pwms_IDX_0_VAL_period_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_pb14_P_pwms_IDX_0_VAL_flags 0
#define DT_N_S_pwmleds_S_pwm_led_pb14_P_pwms_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_pb14_P_pwms_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwmleds_S_pwm_led_pb14, pwms, 0)
#define DT_N_S_pwmleds_S_pwm_led_pb14_P_pwms_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pwmleds_S_pwm_led_pb14, pwms, 0)
#define DT_N_S_pwmleds_S_pwm_led_pb14_P_pwms_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pwmleds_S_pwm_led_pb14, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_pwm_led_pb14_P_pwms_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwmleds_S_pwm_led_pb14, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_pwm_led_pb14_P_pwms_LEN 1
#define DT_N_S_pwmleds_S_pwm_led_pb14_P_pwms_EXISTS 1

/*
 * Devicetree node: /pwmleds/pwm_led_pb23
 *
 * Node identifier: DT_N_S_pwmleds_S_pwm_led_pb23
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pwmleds_S_pwm_led_pb23_PATH "/pwmleds/pwm_led_pb23"

/* Node's name with unit-address: */
#define DT_N_S_pwmleds_S_pwm_led_pb23_FULL_NAME "pwm_led_pb23"

/* Node parent (/pwmleds) identifier: */
#define DT_N_S_pwmleds_S_pwm_led_pb23_PARENT DT_N_S_pwmleds

/* Node's index in its parent's list of children: */
#define DT_N_S_pwmleds_S_pwm_led_pb23_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_pwmleds_S_pwm_led_pb23_NODELABEL_NUM 1
#define DT_N_S_pwmleds_S_pwm_led_pb23_FOREACH_NODELABEL(fn) fn(top_led_green)
#define DT_N_S_pwmleds_S_pwm_led_pb23_FOREACH_NODELABEL_VARGS(fn, ...) fn(top_led_green, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pwmleds_S_pwm_led_pb23_CHILD_NUM 0
#define DT_N_S_pwmleds_S_pwm_led_pb23_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pwmleds_S_pwm_led_pb23_FOREACH_CHILD(fn) 
#define DT_N_S_pwmleds_S_pwm_led_pb23_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pwmleds_S_pwm_led_pb23_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pwmleds_S_pwm_led_pb23_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pwmleds_S_pwm_led_pb23_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pwmleds_S_pwm_led_pb23_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pwmleds_S_pwm_led_pb23_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pwmleds_S_pwm_led_pb23_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pwmleds_S_pwm_led_pb23_ORD 19
#define DT_N_S_pwmleds_S_pwm_led_pb23_ORD_STR_SORTABLE 00019

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pwmleds_S_pwm_led_pb23_REQUIRES_ORDS \
	14, /* /soc/pwm@40005000 */ \
	15, /* /pwmleds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pwmleds_S_pwm_led_pb23_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pwmleds_S_pwm_led_pb23_EXISTS 1
#define DT_N_NODELABEL_top_led_green DT_N_S_pwmleds_S_pwm_led_pb23

/* Macros for properties that are special in the specification: */
#define DT_N_S_pwmleds_S_pwm_led_pb23_REG_NUM 0
#define DT_N_S_pwmleds_S_pwm_led_pb23_RANGES_NUM 0
#define DT_N_S_pwmleds_S_pwm_led_pb23_FOREACH_RANGE(fn) 
#define DT_N_S_pwmleds_S_pwm_led_pb23_IRQ_NUM 0
#define DT_N_S_pwmleds_S_pwm_led_pb23_IRQ_LEVEL 0
#define DT_N_S_pwmleds_S_pwm_led_pb23_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pwmleds_S_pwm_led_pb23_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pwmleds_S_pwm_led_pb23_P_pwms_IDX_0_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_pb23_P_pwms_IDX_0_PH DT_N_S_soc_S_pwm_40005000
#define DT_N_S_pwmleds_S_pwm_led_pb23_P_pwms_IDX_0_VAL_channel 11
#define DT_N_S_pwmleds_S_pwm_led_pb23_P_pwms_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_pb23_P_pwms_IDX_0_VAL_period 107000
#define DT_N_S_pwmleds_S_pwm_led_pb23_P_pwms_IDX_0_VAL_period_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_pb23_P_pwms_IDX_0_VAL_flags 0
#define DT_N_S_pwmleds_S_pwm_led_pb23_P_pwms_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_pb23_P_pwms_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwmleds_S_pwm_led_pb23, pwms, 0)
#define DT_N_S_pwmleds_S_pwm_led_pb23_P_pwms_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pwmleds_S_pwm_led_pb23, pwms, 0)
#define DT_N_S_pwmleds_S_pwm_led_pb23_P_pwms_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pwmleds_S_pwm_led_pb23, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_pwm_led_pb23_P_pwms_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwmleds_S_pwm_led_pb23, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_pwm_led_pb23_P_pwms_LEN 1
#define DT_N_S_pwmleds_S_pwm_led_pb23_P_pwms_EXISTS 1

/*
 * Devicetree node: /pwmleds/pwm_led_pb4
 *
 * Node identifier: DT_N_S_pwmleds_S_pwm_led_pb4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pwmleds_S_pwm_led_pb4_PATH "/pwmleds/pwm_led_pb4"

/* Node's name with unit-address: */
#define DT_N_S_pwmleds_S_pwm_led_pb4_FULL_NAME "pwm_led_pb4"

/* Node parent (/pwmleds) identifier: */
#define DT_N_S_pwmleds_S_pwm_led_pb4_PARENT DT_N_S_pwmleds

/* Node's index in its parent's list of children: */
#define DT_N_S_pwmleds_S_pwm_led_pb4_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_pwmleds_S_pwm_led_pb4_NODELABEL_NUM 1
#define DT_N_S_pwmleds_S_pwm_led_pb4_FOREACH_NODELABEL(fn) fn(top_led_red)
#define DT_N_S_pwmleds_S_pwm_led_pb4_FOREACH_NODELABEL_VARGS(fn, ...) fn(top_led_red, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pwmleds_S_pwm_led_pb4_CHILD_NUM 0
#define DT_N_S_pwmleds_S_pwm_led_pb4_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pwmleds_S_pwm_led_pb4_FOREACH_CHILD(fn) 
#define DT_N_S_pwmleds_S_pwm_led_pb4_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pwmleds_S_pwm_led_pb4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pwmleds_S_pwm_led_pb4_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pwmleds_S_pwm_led_pb4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pwmleds_S_pwm_led_pb4_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pwmleds_S_pwm_led_pb4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pwmleds_S_pwm_led_pb4_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pwmleds_S_pwm_led_pb4_ORD 20
#define DT_N_S_pwmleds_S_pwm_led_pb4_ORD_STR_SORTABLE 00020

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pwmleds_S_pwm_led_pb4_REQUIRES_ORDS \
	14, /* /soc/pwm@40005000 */ \
	15, /* /pwmleds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pwmleds_S_pwm_led_pb4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pwmleds_S_pwm_led_pb4_EXISTS 1
#define DT_N_NODELABEL_top_led_red DT_N_S_pwmleds_S_pwm_led_pb4

/* Macros for properties that are special in the specification: */
#define DT_N_S_pwmleds_S_pwm_led_pb4_REG_NUM 0
#define DT_N_S_pwmleds_S_pwm_led_pb4_RANGES_NUM 0
#define DT_N_S_pwmleds_S_pwm_led_pb4_FOREACH_RANGE(fn) 
#define DT_N_S_pwmleds_S_pwm_led_pb4_IRQ_NUM 0
#define DT_N_S_pwmleds_S_pwm_led_pb4_IRQ_LEVEL 0
#define DT_N_S_pwmleds_S_pwm_led_pb4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pwmleds_S_pwm_led_pb4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pwmleds_S_pwm_led_pb4_P_pwms_IDX_0_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_pb4_P_pwms_IDX_0_PH DT_N_S_soc_S_pwm_40005000
#define DT_N_S_pwmleds_S_pwm_led_pb4_P_pwms_IDX_0_VAL_channel 7
#define DT_N_S_pwmleds_S_pwm_led_pb4_P_pwms_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_pb4_P_pwms_IDX_0_VAL_period 107000
#define DT_N_S_pwmleds_S_pwm_led_pb4_P_pwms_IDX_0_VAL_period_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_pb4_P_pwms_IDX_0_VAL_flags 0
#define DT_N_S_pwmleds_S_pwm_led_pb4_P_pwms_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_pb4_P_pwms_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwmleds_S_pwm_led_pb4, pwms, 0)
#define DT_N_S_pwmleds_S_pwm_led_pb4_P_pwms_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pwmleds_S_pwm_led_pb4, pwms, 0)
#define DT_N_S_pwmleds_S_pwm_led_pb4_P_pwms_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pwmleds_S_pwm_led_pb4, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_pwm_led_pb4_P_pwms_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwmleds_S_pwm_led_pb4, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_pwm_led_pb4_P_pwms_LEN 1
#define DT_N_S_pwmleds_S_pwm_led_pb4_P_pwms_EXISTS 1

/*
 * Devicetree node: /pwmleds/pwm_led_pb7
 *
 * Node identifier: DT_N_S_pwmleds_S_pwm_led_pb7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pwmleds_S_pwm_led_pb7_PATH "/pwmleds/pwm_led_pb7"

/* Node's name with unit-address: */
#define DT_N_S_pwmleds_S_pwm_led_pb7_FULL_NAME "pwm_led_pb7"

/* Node parent (/pwmleds) identifier: */
#define DT_N_S_pwmleds_S_pwm_led_pb7_PARENT DT_N_S_pwmleds

/* Node's index in its parent's list of children: */
#define DT_N_S_pwmleds_S_pwm_led_pb7_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pwmleds_S_pwm_led_pb7_NODELABEL_NUM 1
#define DT_N_S_pwmleds_S_pwm_led_pb7_FOREACH_NODELABEL(fn) fn(front_led_red)
#define DT_N_S_pwmleds_S_pwm_led_pb7_FOREACH_NODELABEL_VARGS(fn, ...) fn(front_led_red, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pwmleds_S_pwm_led_pb7_CHILD_NUM 0
#define DT_N_S_pwmleds_S_pwm_led_pb7_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pwmleds_S_pwm_led_pb7_FOREACH_CHILD(fn) 
#define DT_N_S_pwmleds_S_pwm_led_pb7_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pwmleds_S_pwm_led_pb7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pwmleds_S_pwm_led_pb7_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pwmleds_S_pwm_led_pb7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pwmleds_S_pwm_led_pb7_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pwmleds_S_pwm_led_pb7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pwmleds_S_pwm_led_pb7_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pwmleds_S_pwm_led_pb7_ORD 21
#define DT_N_S_pwmleds_S_pwm_led_pb7_ORD_STR_SORTABLE 00021

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pwmleds_S_pwm_led_pb7_REQUIRES_ORDS \
	14, /* /soc/pwm@40005000 */ \
	15, /* /pwmleds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pwmleds_S_pwm_led_pb7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pwmleds_S_pwm_led_pb7_EXISTS 1
#define DT_N_NODELABEL_front_led_red DT_N_S_pwmleds_S_pwm_led_pb7

/* Macros for properties that are special in the specification: */
#define DT_N_S_pwmleds_S_pwm_led_pb7_REG_NUM 0
#define DT_N_S_pwmleds_S_pwm_led_pb7_RANGES_NUM 0
#define DT_N_S_pwmleds_S_pwm_led_pb7_FOREACH_RANGE(fn) 
#define DT_N_S_pwmleds_S_pwm_led_pb7_IRQ_NUM 0
#define DT_N_S_pwmleds_S_pwm_led_pb7_IRQ_LEVEL 0
#define DT_N_S_pwmleds_S_pwm_led_pb7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pwmleds_S_pwm_led_pb7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pwmleds_S_pwm_led_pb7_P_pwms_IDX_0_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_pb7_P_pwms_IDX_0_PH DT_N_S_soc_S_pwm_40005000
#define DT_N_S_pwmleds_S_pwm_led_pb7_P_pwms_IDX_0_VAL_channel 9
#define DT_N_S_pwmleds_S_pwm_led_pb7_P_pwms_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_pb7_P_pwms_IDX_0_VAL_period 107000
#define DT_N_S_pwmleds_S_pwm_led_pb7_P_pwms_IDX_0_VAL_period_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_pb7_P_pwms_IDX_0_VAL_flags 0
#define DT_N_S_pwmleds_S_pwm_led_pb7_P_pwms_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_pwmleds_S_pwm_led_pb7_P_pwms_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwmleds_S_pwm_led_pb7, pwms, 0)
#define DT_N_S_pwmleds_S_pwm_led_pb7_P_pwms_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pwmleds_S_pwm_led_pb7, pwms, 0)
#define DT_N_S_pwmleds_S_pwm_led_pb7_P_pwms_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pwmleds_S_pwm_led_pb7, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_pwm_led_pb7_P_pwms_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwmleds_S_pwm_led_pb7, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwmleds_S_pwm_led_pb7_P_pwms_LEN 1
#define DT_N_S_pwmleds_S_pwm_led_pb7_P_pwms_EXISTS 1

/*
 * Devicetree node: /soc/memory@20000000
 *
 * Node identifier: DT_N_S_soc_S_memory_20000000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE/dts/bindings/sram/mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_20000000_PATH "/soc/memory@20000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_20000000_FULL_NAME "memory@20000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_memory_20000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_memory_20000000_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_memory_20000000_NODELABEL_NUM 1
#define DT_N_S_soc_S_memory_20000000_FOREACH_NODELABEL(fn) fn(sram)
#define DT_N_S_soc_S_memory_20000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(sram, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_memory_20000000_CHILD_NUM 0
#define DT_N_S_soc_S_memory_20000000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_20000000_ORD 22
#define DT_N_S_soc_S_memory_20000000_ORD_STR_SORTABLE 00022

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_20000000_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_20000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_20000000_EXISTS 1
#define DT_N_INST_0_mmio_sram DT_N_S_soc_S_memory_20000000
#define DT_N_NODELABEL_sram   DT_N_S_soc_S_memory_20000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_memory_20000000_REG_NUM 1
#define DT_N_S_soc_S_memory_20000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_REG_IDX_0_VAL_ADDRESS 536870912 /* 0x20000000 */
#define DT_N_S_soc_S_memory_20000000_REG_IDX_0_VAL_SIZE 32768 /* 0x8000 */
#define DT_N_S_soc_S_memory_20000000_RANGES_NUM 0
#define DT_N_S_soc_S_memory_20000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_memory_20000000_IRQ_NUM 0
#define DT_N_S_soc_S_memory_20000000_IRQ_LEVEL 0
#define DT_N_S_soc_S_memory_20000000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_memory_20000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_memory_20000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_memory_20000000_P_wakeup_source 0
#define DT_N_S_soc_S_memory_20000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_memory_20000000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_compatible {"mmio-sram"}
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0_STRING_UNQUOTED mmio-sram
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0_STRING_TOKEN mmio_sram
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_20000000, compatible, 0)
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_20000000, compatible, 0)
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_20000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_20000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20000000_P_compatible_LEN 1
#define DT_N_S_soc_S_memory_20000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_reg {536870912 /* 0x20000000 */, 32768 /* 0x8000 */}
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_0 536870912
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_1 32768
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_memory_20000000_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/systick@e000f000
 *
 * Node identifier: DT_N_S_soc_S_systick_e000f000
 *
 * Binding (compatible = wch,ch32v-v4-systick):
 *   $ZEPHYR_BASE/dts/bindings/timer/wch,ch32v-v4-systick.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_systick_e000f000_PATH "/soc/systick@e000f000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_systick_e000f000_FULL_NAME "systick@e000f000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_systick_e000f000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_systick_e000f000_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_systick_e000f000_NODELABEL_NUM 1
#define DT_N_S_soc_S_systick_e000f000_FOREACH_NODELABEL(fn) fn(systick)
#define DT_N_S_soc_S_systick_e000f000_FOREACH_NODELABEL_VARGS(fn, ...) fn(systick, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_systick_e000f000_CHILD_NUM 0
#define DT_N_S_soc_S_systick_e000f000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_systick_e000f000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_systick_e000f000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_systick_e000f000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_systick_e000f000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_systick_e000f000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_systick_e000f000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_systick_e000f000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_systick_e000f000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_systick_e000f000_ORD 23
#define DT_N_S_soc_S_systick_e000f000_ORD_STR_SORTABLE 00023

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_systick_e000f000_REQUIRES_ORDS \
	5, /* /soc */ \
	8, /* /soc/pfic@e000e000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_systick_e000f000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_systick_e000f000_EXISTS 1
#define DT_N_INST_0_wch_ch32v_v4_systick DT_N_S_soc_S_systick_e000f000
#define DT_N_NODELABEL_systick           DT_N_S_soc_S_systick_e000f000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_systick_e000f000_REG_NUM 1
#define DT_N_S_soc_S_systick_e000f000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_systick_e000f000_REG_IDX_0_VAL_ADDRESS 3758157824 /* 0xe000f000 */
#define DT_N_S_soc_S_systick_e000f000_REG_IDX_0_VAL_SIZE 20 /* 0x14 */
#define DT_N_S_soc_S_systick_e000f000_RANGES_NUM 0
#define DT_N_S_soc_S_systick_e000f000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_systick_e000f000_IRQ_NUM 1
#define DT_N_S_soc_S_systick_e000f000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_systick_e000f000_IRQ_IDX_0_VAL_irq 12
#define DT_N_S_soc_S_systick_e000f000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_systick_e000f000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_systick_e000f000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_systick_e000f000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_systick_e000f000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_pfic_e000e000
#define DT_N_S_soc_S_systick_e000f000_IRQ_LEVEL 1
#define DT_N_S_soc_S_systick_e000f000_COMPAT_MATCHES_wch_ch32v_v4_systick 1
#define DT_N_S_soc_S_systick_e000f000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_systick_e000f000_COMPAT_VENDOR_IDX_0 "Nanjing Qinheng Microelectronics Co., Ltd."
#define DT_N_S_soc_S_systick_e000f000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_systick_e000f000_COMPAT_MODEL_IDX_0 "ch32v-v4-systick"
#define DT_N_S_soc_S_systick_e000f000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_systick_e000f000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_systick_e000f000_P_wakeup_source 0
#define DT_N_S_soc_S_systick_e000f000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_systick_e000f000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_systick_e000f000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_systick_e000f000_P_compatible {"wch,ch32v-v4-systick"}
#define DT_N_S_soc_S_systick_e000f000_P_compatible_IDX_0 "wch,ch32v-v4-systick"
#define DT_N_S_soc_S_systick_e000f000_P_compatible_IDX_0_STRING_UNQUOTED wch,ch32v-v4-systick
#define DT_N_S_soc_S_systick_e000f000_P_compatible_IDX_0_STRING_TOKEN wch_ch32v_v4_systick
#define DT_N_S_soc_S_systick_e000f000_P_compatible_IDX_0_STRING_UPPER_TOKEN WCH_CH32V_V4_SYSTICK
#define DT_N_S_soc_S_systick_e000f000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_systick_e000f000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_systick_e000f000, compatible, 0)
#define DT_N_S_soc_S_systick_e000f000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_systick_e000f000, compatible, 0)
#define DT_N_S_soc_S_systick_e000f000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_systick_e000f000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_systick_e000f000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_systick_e000f000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_systick_e000f000_P_compatible_LEN 1
#define DT_N_S_soc_S_systick_e000f000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_systick_e000f000_P_reg {3758157824 /* 0xe000f000 */, 20 /* 0x14 */}
#define DT_N_S_soc_S_systick_e000f000_P_reg_IDX_0 3758157824
#define DT_N_S_soc_S_systick_e000f000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_systick_e000f000_P_reg_IDX_1 20
#define DT_N_S_soc_S_systick_e000f000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_systick_e000f000_P_reg_EXISTS 1
#define DT_N_S_soc_S_systick_e000f000_P_interrupts {12 /* 0xc */, 0 /* 0x0 */}
#define DT_N_S_soc_S_systick_e000f000_P_interrupts_IDX_0 12
#define DT_N_S_soc_S_systick_e000f000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_systick_e000f000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_systick_e000f000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_systick_e000f000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_systick_e000f000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_systick_e000f000_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/system-controller@40001000/pin-controller/uart0_default
 *
 * Node identifier: DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_PATH "/soc/system-controller@40001000/pin-controller/uart0_default"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_FULL_NAME "uart0_default"

/* Node parent (/soc/system-controller@40001000/pin-controller) identifier: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_PARENT DT_N_S_soc_S_system_controller_40001000_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_NODELABEL_NUM 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_FOREACH_NODELABEL(fn) fn(uart0_default)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart0_default, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_CHILD_NUM 2
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_ORD 24
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_ORD_STR_SORTABLE 00024

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_REQUIRES_ORDS \
	12, /* /soc/system-controller@40001000/pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_SUPPORTS_ORDS \
	25, /* /soc/uart@40003000 */ \
	37, /* /soc/system-controller@40001000/pin-controller/uart0_default/group1 */ \
	38, /* /soc/system-controller@40001000/pin-controller/uart0_default/group2 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_EXISTS 1
#define DT_N_NODELABEL_uart0_default DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_REG_NUM 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_RANGES_NUM 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_IRQ_NUM 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_IRQ_LEVEL 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/uart@40003000
 *
 * Node identifier: DT_N_S_soc_S_uart_40003000
 *
 * Binding (compatible = wch,ch5xx-uart):
 *   $ZEPHYR_BASE/dts/bindings/serial/wch,ch5xx-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uart_40003000_PATH "/soc/uart@40003000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uart_40003000_FULL_NAME "uart@40003000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_40003000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_uart_40003000_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_uart_40003000_NODELABEL_NUM 1
#define DT_N_S_soc_S_uart_40003000_FOREACH_NODELABEL(fn) fn(uart0)
#define DT_N_S_soc_S_uart_40003000_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_uart_40003000_CHILD_NUM 0
#define DT_N_S_soc_S_uart_40003000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_uart_40003000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uart_40003000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_40003000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_40003000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_uart_40003000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uart_40003000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_40003000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_40003000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_40003000_ORD 25
#define DT_N_S_soc_S_uart_40003000_ORD_STR_SORTABLE 00025

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_40003000_REQUIRES_ORDS \
	5, /* /soc */ \
	7, /* /clocks/clkmux */ \
	8, /* /soc/pfic@e000e000 */ \
	24, /* /soc/system-controller@40001000/pin-controller/uart0_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_40003000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_40003000_EXISTS 1
#define DT_N_INST_1_wch_ch5xx_uart DT_N_S_soc_S_uart_40003000
#define DT_N_NODELABEL_uart0       DT_N_S_soc_S_uart_40003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uart_40003000_REG_NUM 1
#define DT_N_S_soc_S_uart_40003000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40003000_REG_IDX_0_VAL_ADDRESS 1073754112 /* 0x40003000 */
#define DT_N_S_soc_S_uart_40003000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_uart_40003000_RANGES_NUM 0
#define DT_N_S_soc_S_uart_40003000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uart_40003000_IRQ_NUM 1
#define DT_N_S_soc_S_uart_40003000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40003000_IRQ_IDX_0_VAL_irq 26
#define DT_N_S_soc_S_uart_40003000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_40003000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40003000_IRQ_IDX_0_VAL_priority 12
#define DT_N_S_soc_S_uart_40003000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_40003000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_pfic_e000e000
#define DT_N_S_soc_S_uart_40003000_IRQ_LEVEL 1
#define DT_N_S_soc_S_uart_40003000_COMPAT_MATCHES_wch_ch5xx_uart 1
#define DT_N_S_soc_S_uart_40003000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40003000_COMPAT_VENDOR_IDX_0 "Nanjing Qinheng Microelectronics Co., Ltd."
#define DT_N_S_soc_S_uart_40003000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40003000_COMPAT_MODEL_IDX_0 "ch5xx-uart"
#define DT_N_S_soc_S_uart_40003000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uart_40003000_PINCTRL_NUM 1
#define DT_N_S_soc_S_uart_40003000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40003000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_uart_40003000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_uart_40003000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_uart_40003000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_uart_40003000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default

/* Generic property macros: */
#define DT_N_S_soc_S_uart_40003000_P_wakeup_source 0
#define DT_N_S_soc_S_uart_40003000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_uart_40003000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_uart_40003000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_uart_40003000_P_status "disabled"
#define DT_N_S_soc_S_uart_40003000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_uart_40003000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_uart_40003000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_40003000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_uart_40003000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40003000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_uart_40003000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_uart_40003000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_uart_40003000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_40003000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40003000, status, 0)
#define DT_N_S_soc_S_uart_40003000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40003000, status, 0)
#define DT_N_S_soc_S_uart_40003000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40003000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40003000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40003000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40003000_P_status_LEN 1
#define DT_N_S_soc_S_uart_40003000_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_40003000_P_compatible {"wch,ch5xx-uart"}
#define DT_N_S_soc_S_uart_40003000_P_compatible_IDX_0 "wch,ch5xx-uart"
#define DT_N_S_soc_S_uart_40003000_P_compatible_IDX_0_STRING_UNQUOTED wch,ch5xx-uart
#define DT_N_S_soc_S_uart_40003000_P_compatible_IDX_0_STRING_TOKEN wch_ch5xx_uart
#define DT_N_S_soc_S_uart_40003000_P_compatible_IDX_0_STRING_UPPER_TOKEN WCH_CH5XX_UART
#define DT_N_S_soc_S_uart_40003000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40003000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40003000, compatible, 0)
#define DT_N_S_soc_S_uart_40003000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40003000, compatible, 0)
#define DT_N_S_soc_S_uart_40003000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40003000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40003000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40003000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40003000_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_40003000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_40003000_P_reg {1073754112 /* 0x40003000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_uart_40003000_P_reg_IDX_0 1073754112
#define DT_N_S_soc_S_uart_40003000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40003000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_uart_40003000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40003000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_40003000_P_interrupts {26 /* 0x1a */, 12 /* 0xc */}
#define DT_N_S_soc_S_uart_40003000_P_interrupts_IDX_0 26
#define DT_N_S_soc_S_uart_40003000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40003000_P_interrupts_IDX_1 12
#define DT_N_S_soc_S_uart_40003000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40003000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_uart_40003000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40003000_P_clocks_IDX_0_PH DT_N_S_clocks_S_clkmux
#define DT_N_S_soc_S_uart_40003000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40003000, clocks, 0)
#define DT_N_S_soc_S_uart_40003000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40003000, clocks, 0)
#define DT_N_S_soc_S_uart_40003000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40003000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40003000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40003000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40003000_P_clocks_LEN 1
#define DT_N_S_soc_S_uart_40003000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_uart_40003000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_uart_40003000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_uart_40003000_P_current_speed 115200
#define DT_N_S_soc_S_uart_40003000_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_uart_40003000_P_hw_flow_control 0
#define DT_N_S_soc_S_uart_40003000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_40003000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default
#define DT_N_S_soc_S_uart_40003000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default
#define DT_N_S_soc_S_uart_40003000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40003000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40003000, pinctrl_0, 0)
#define DT_N_S_soc_S_uart_40003000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40003000, pinctrl_0, 0)
#define DT_N_S_soc_S_uart_40003000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40003000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40003000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40003000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40003000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_uart_40003000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_uart_40003000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_uart_40003000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_uart_40003000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_uart_40003000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_uart_40003000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_uart_40003000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40003000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40003000, pinctrl_names, 0)
#define DT_N_S_soc_S_uart_40003000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40003000, pinctrl_names, 0)
#define DT_N_S_soc_S_uart_40003000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40003000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40003000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40003000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40003000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_uart_40003000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/system-controller@40001000/pin-controller/uart1_default
 *
 * Node identifier: DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_PATH "/soc/system-controller@40001000/pin-controller/uart1_default"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_FULL_NAME "uart1_default"

/* Node parent (/soc/system-controller@40001000/pin-controller) identifier: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_PARENT DT_N_S_soc_S_system_controller_40001000_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_NODELABEL_NUM 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_FOREACH_NODELABEL(fn) fn(uart1_default)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart1_default, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_CHILD_NUM 2
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2, __VA_ARGS__)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2, __VA_ARGS__)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2, __VA_ARGS__)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_ORD 26
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_ORD_STR_SORTABLE 00026

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_REQUIRES_ORDS \
	12, /* /soc/system-controller@40001000/pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_SUPPORTS_ORDS \
	27, /* /soc/uart@40003400 */ \
	39, /* /soc/system-controller@40001000/pin-controller/uart1_default/group1 */ \
	40, /* /soc/system-controller@40001000/pin-controller/uart1_default/group2 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_EXISTS 1
#define DT_N_NODELABEL_uart1_default DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_REG_NUM 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_RANGES_NUM 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_IRQ_NUM 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_IRQ_LEVEL 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/uart@40003400
 *
 * Node identifier: DT_N_S_soc_S_uart_40003400
 *
 * Binding (compatible = wch,ch5xx-uart):
 *   $ZEPHYR_BASE/dts/bindings/serial/wch,ch5xx-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uart_40003400_PATH "/soc/uart@40003400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uart_40003400_FULL_NAME "uart@40003400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_40003400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_uart_40003400_CHILD_IDX 8

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_uart_40003400_NODELABEL_NUM 1
#define DT_N_S_soc_S_uart_40003400_FOREACH_NODELABEL(fn) fn(uart1)
#define DT_N_S_soc_S_uart_40003400_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_uart_40003400_CHILD_NUM 0
#define DT_N_S_soc_S_uart_40003400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_uart_40003400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uart_40003400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_40003400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_40003400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_uart_40003400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uart_40003400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_40003400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_40003400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_40003400_ORD 27
#define DT_N_S_soc_S_uart_40003400_ORD_STR_SORTABLE 00027

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_40003400_REQUIRES_ORDS \
	5, /* /soc */ \
	7, /* /clocks/clkmux */ \
	8, /* /soc/pfic@e000e000 */ \
	26, /* /soc/system-controller@40001000/pin-controller/uart1_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_40003400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_40003400_EXISTS 1
#define DT_N_INST_0_wch_ch5xx_uart DT_N_S_soc_S_uart_40003400
#define DT_N_NODELABEL_uart1       DT_N_S_soc_S_uart_40003400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uart_40003400_REG_NUM 1
#define DT_N_S_soc_S_uart_40003400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40003400_REG_IDX_0_VAL_ADDRESS 1073755136 /* 0x40003400 */
#define DT_N_S_soc_S_uart_40003400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_uart_40003400_RANGES_NUM 0
#define DT_N_S_soc_S_uart_40003400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uart_40003400_IRQ_NUM 1
#define DT_N_S_soc_S_uart_40003400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40003400_IRQ_IDX_0_VAL_irq 27
#define DT_N_S_soc_S_uart_40003400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_40003400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40003400_IRQ_IDX_0_VAL_priority 13
#define DT_N_S_soc_S_uart_40003400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_40003400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_pfic_e000e000
#define DT_N_S_soc_S_uart_40003400_IRQ_LEVEL 1
#define DT_N_S_soc_S_uart_40003400_COMPAT_MATCHES_wch_ch5xx_uart 1
#define DT_N_S_soc_S_uart_40003400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40003400_COMPAT_VENDOR_IDX_0 "Nanjing Qinheng Microelectronics Co., Ltd."
#define DT_N_S_soc_S_uart_40003400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40003400_COMPAT_MODEL_IDX_0 "ch5xx-uart"
#define DT_N_S_soc_S_uart_40003400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uart_40003400_PINCTRL_NUM 1
#define DT_N_S_soc_S_uart_40003400_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40003400_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_uart_40003400_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_uart_40003400_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_uart_40003400_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_uart_40003400_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default

/* Generic property macros: */
#define DT_N_S_soc_S_uart_40003400_P_wakeup_source 0
#define DT_N_S_soc_S_uart_40003400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_uart_40003400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_uart_40003400_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_uart_40003400_P_status "okay"
#define DT_N_S_soc_S_uart_40003400_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_uart_40003400_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_uart_40003400_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_uart_40003400_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_uart_40003400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40003400_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_uart_40003400_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_uart_40003400_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_uart_40003400_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_uart_40003400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40003400, status, 0)
#define DT_N_S_soc_S_uart_40003400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40003400, status, 0)
#define DT_N_S_soc_S_uart_40003400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40003400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40003400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40003400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40003400_P_status_LEN 1
#define DT_N_S_soc_S_uart_40003400_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_40003400_P_compatible {"wch,ch5xx-uart"}
#define DT_N_S_soc_S_uart_40003400_P_compatible_IDX_0 "wch,ch5xx-uart"
#define DT_N_S_soc_S_uart_40003400_P_compatible_IDX_0_STRING_UNQUOTED wch,ch5xx-uart
#define DT_N_S_soc_S_uart_40003400_P_compatible_IDX_0_STRING_TOKEN wch_ch5xx_uart
#define DT_N_S_soc_S_uart_40003400_P_compatible_IDX_0_STRING_UPPER_TOKEN WCH_CH5XX_UART
#define DT_N_S_soc_S_uart_40003400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40003400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40003400, compatible, 0)
#define DT_N_S_soc_S_uart_40003400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40003400, compatible, 0)
#define DT_N_S_soc_S_uart_40003400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40003400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40003400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40003400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40003400_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_40003400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_40003400_P_reg {1073755136 /* 0x40003400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_uart_40003400_P_reg_IDX_0 1073755136
#define DT_N_S_soc_S_uart_40003400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40003400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_uart_40003400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40003400_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_40003400_P_interrupts {27 /* 0x1b */, 13 /* 0xd */}
#define DT_N_S_soc_S_uart_40003400_P_interrupts_IDX_0 27
#define DT_N_S_soc_S_uart_40003400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40003400_P_interrupts_IDX_1 13
#define DT_N_S_soc_S_uart_40003400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40003400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_uart_40003400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40003400_P_clocks_IDX_0_PH DT_N_S_clocks_S_clkmux
#define DT_N_S_soc_S_uart_40003400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40003400, clocks, 0)
#define DT_N_S_soc_S_uart_40003400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40003400, clocks, 0)
#define DT_N_S_soc_S_uart_40003400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40003400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40003400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40003400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40003400_P_clocks_LEN 1
#define DT_N_S_soc_S_uart_40003400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_uart_40003400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_uart_40003400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_uart_40003400_P_current_speed 115200
#define DT_N_S_soc_S_uart_40003400_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_uart_40003400_P_hw_flow_control 0
#define DT_N_S_soc_S_uart_40003400_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_40003400_P_pinctrl_0_IDX_0 DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default
#define DT_N_S_soc_S_uart_40003400_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default
#define DT_N_S_soc_S_uart_40003400_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40003400_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40003400, pinctrl_0, 0)
#define DT_N_S_soc_S_uart_40003400_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40003400, pinctrl_0, 0)
#define DT_N_S_soc_S_uart_40003400_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40003400, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40003400_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40003400, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40003400_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_uart_40003400_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_uart_40003400_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_uart_40003400_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_uart_40003400_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_uart_40003400_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_uart_40003400_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_uart_40003400_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40003400_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40003400, pinctrl_names, 0)
#define DT_N_S_soc_S_uart_40003400_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40003400, pinctrl_names, 0)
#define DT_N_S_soc_S_uart_40003400_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40003400, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40003400_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40003400, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40003400_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_uart_40003400_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/udc@40008400
 *
 * Node identifier: DT_N_S_soc_S_udc_40008400
 *
 * Binding (compatible = wch,ch58x-udc):
 *   $ZEPHYR_BASE/dts/bindings/usb/wch,ch58x-udc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_udc_40008400_PATH "/soc/udc@40008400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_udc_40008400_FULL_NAME "udc@40008400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_udc_40008400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_udc_40008400_CHILD_IDX 10

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_udc_40008400_NODELABEL_NUM 1
#define DT_N_S_soc_S_udc_40008400_FOREACH_NODELABEL(fn) fn(usbd2)
#define DT_N_S_soc_S_udc_40008400_FOREACH_NODELABEL_VARGS(fn, ...) fn(usbd2, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_udc_40008400_CHILD_NUM 0
#define DT_N_S_soc_S_udc_40008400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_udc_40008400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_udc_40008400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_udc_40008400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_udc_40008400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_udc_40008400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_udc_40008400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_udc_40008400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_udc_40008400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_udc_40008400_ORD 28
#define DT_N_S_soc_S_udc_40008400_ORD_STR_SORTABLE 00028

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_udc_40008400_REQUIRES_ORDS \
	5, /* /soc */ \
	7, /* /clocks/clkmux */ \
	8, /* /soc/pfic@e000e000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_udc_40008400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_udc_40008400_EXISTS 1
#define DT_N_INST_1_wch_ch58x_udc DT_N_S_soc_S_udc_40008400
#define DT_N_NODELABEL_usbd2      DT_N_S_soc_S_udc_40008400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_udc_40008400_REG_NUM 1
#define DT_N_S_soc_S_udc_40008400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_udc_40008400_REG_IDX_0_VAL_ADDRESS 1073775616 /* 0x40008400 */
#define DT_N_S_soc_S_udc_40008400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_udc_40008400_RANGES_NUM 0
#define DT_N_S_soc_S_udc_40008400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_udc_40008400_IRQ_NUM 1
#define DT_N_S_soc_S_udc_40008400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_udc_40008400_IRQ_IDX_0_VAL_irq 23
#define DT_N_S_soc_S_udc_40008400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_udc_40008400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_udc_40008400_IRQ_IDX_0_VAL_priority 9
#define DT_N_S_soc_S_udc_40008400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_udc_40008400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_pfic_e000e000
#define DT_N_S_soc_S_udc_40008400_IRQ_LEVEL 1
#define DT_N_S_soc_S_udc_40008400_COMPAT_MATCHES_wch_ch58x_udc 1
#define DT_N_S_soc_S_udc_40008400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_udc_40008400_COMPAT_VENDOR_IDX_0 "Nanjing Qinheng Microelectronics Co., Ltd."
#define DT_N_S_soc_S_udc_40008400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_udc_40008400_COMPAT_MODEL_IDX_0 "ch58x-udc"
#define DT_N_S_soc_S_udc_40008400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_udc_40008400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_udc_40008400_P_wakeup_source 0
#define DT_N_S_soc_S_udc_40008400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_udc_40008400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_udc_40008400_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_udc_40008400_P_compatible {"wch,ch58x-udc"}
#define DT_N_S_soc_S_udc_40008400_P_compatible_IDX_0 "wch,ch58x-udc"
#define DT_N_S_soc_S_udc_40008400_P_compatible_IDX_0_STRING_UNQUOTED wch,ch58x-udc
#define DT_N_S_soc_S_udc_40008400_P_compatible_IDX_0_STRING_TOKEN wch_ch58x_udc
#define DT_N_S_soc_S_udc_40008400_P_compatible_IDX_0_STRING_UPPER_TOKEN WCH_CH58X_UDC
#define DT_N_S_soc_S_udc_40008400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_udc_40008400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_udc_40008400, compatible, 0)
#define DT_N_S_soc_S_udc_40008400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_udc_40008400, compatible, 0)
#define DT_N_S_soc_S_udc_40008400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_udc_40008400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_udc_40008400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_udc_40008400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_udc_40008400_P_compatible_LEN 1
#define DT_N_S_soc_S_udc_40008400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_udc_40008400_P_reg {1073775616 /* 0x40008400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_udc_40008400_P_reg_IDX_0 1073775616
#define DT_N_S_soc_S_udc_40008400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_udc_40008400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_udc_40008400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_udc_40008400_P_reg_EXISTS 1
#define DT_N_S_soc_S_udc_40008400_P_interrupts {23 /* 0x17 */, 9 /* 0x9 */}
#define DT_N_S_soc_S_udc_40008400_P_interrupts_IDX_0 23
#define DT_N_S_soc_S_udc_40008400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_udc_40008400_P_interrupts_IDX_1 9
#define DT_N_S_soc_S_udc_40008400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_udc_40008400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_udc_40008400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_udc_40008400_P_clocks_IDX_0_PH DT_N_S_clocks_S_clkmux
#define DT_N_S_soc_S_udc_40008400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_udc_40008400, clocks, 0)
#define DT_N_S_soc_S_udc_40008400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_udc_40008400, clocks, 0)
#define DT_N_S_soc_S_udc_40008400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_udc_40008400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_udc_40008400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_udc_40008400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_udc_40008400_P_clocks_LEN 1
#define DT_N_S_soc_S_udc_40008400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_udc_40008400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_udc_40008400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_udc_40008400_P_maximum_speed "full-speed"
#define DT_N_S_soc_S_udc_40008400_P_maximum_speed_STRING_UNQUOTED full-speed
#define DT_N_S_soc_S_udc_40008400_P_maximum_speed_STRING_TOKEN full_speed
#define DT_N_S_soc_S_udc_40008400_P_maximum_speed_STRING_UPPER_TOKEN FULL_SPEED
#define DT_N_S_soc_S_udc_40008400_P_maximum_speed_IDX_0 "full-speed"
#define DT_N_S_soc_S_udc_40008400_P_maximum_speed_IDX_0_EXISTS 1
#define DT_N_S_soc_S_udc_40008400_P_maximum_speed_ENUM_IDX 1
#define DT_N_S_soc_S_udc_40008400_P_maximum_speed_ENUM_VAL_full_speed_EXISTS 1
#define DT_N_S_soc_S_udc_40008400_P_maximum_speed_ENUM_TOKEN full_speed
#define DT_N_S_soc_S_udc_40008400_P_maximum_speed_ENUM_UPPER_TOKEN FULL_SPEED
#define DT_N_S_soc_S_udc_40008400_P_maximum_speed_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_udc_40008400, maximum_speed, 0)
#define DT_N_S_soc_S_udc_40008400_P_maximum_speed_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_udc_40008400, maximum_speed, 0)
#define DT_N_S_soc_S_udc_40008400_P_maximum_speed_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_udc_40008400, maximum_speed, 0, __VA_ARGS__)
#define DT_N_S_soc_S_udc_40008400_P_maximum_speed_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_udc_40008400, maximum_speed, 0, __VA_ARGS__)
#define DT_N_S_soc_S_udc_40008400_P_maximum_speed_LEN 1
#define DT_N_S_soc_S_udc_40008400_P_maximum_speed_EXISTS 1
#define DT_N_S_soc_S_udc_40008400_P_num_bidir_endpoints 8
#define DT_N_S_soc_S_udc_40008400_P_num_bidir_endpoints_EXISTS 1
#define DT_N_S_soc_S_udc_40008400_P_num_in_endpoints 7
#define DT_N_S_soc_S_udc_40008400_P_num_in_endpoints_EXISTS 1
#define DT_N_S_soc_S_udc_40008400_P_num_out_endpoints 7
#define DT_N_S_soc_S_udc_40008400_P_num_out_endpoints_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40001800
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40001800
 *
 * Binding (compatible = wch,ch5xx-flash-controller):
 *   $ZEPHYR_BASE/dts/bindings/flash_controller/wch,ch5xx-flash-controller.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40001800_PATH "/soc/flash-controller@40001800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40001800_FULL_NAME "flash-controller@40001800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_flash_controller_40001800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40001800_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_40001800_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_40001800_FOREACH_NODELABEL(fn) fn(flash_controller)
#define DT_N_S_soc_S_flash_controller_40001800_FOREACH_NODELABEL_VARGS(fn, ...) fn(flash_controller, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40001800_CHILD_NUM 1
#define DT_N_S_soc_S_flash_controller_40001800_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_flash_controller_40001800_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0)
#define DT_N_S_soc_S_flash_controller_40001800_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0)
#define DT_N_S_soc_S_flash_controller_40001800_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40001800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40001800_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0)
#define DT_N_S_soc_S_flash_controller_40001800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0)
#define DT_N_S_soc_S_flash_controller_40001800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40001800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40001800_ORD 29
#define DT_N_S_soc_S_flash_controller_40001800_ORD_STR_SORTABLE 00029

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40001800_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40001800_SUPPORTS_ORDS \
	30, /* /soc/flash-controller@40001800/flash@0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40001800_EXISTS 1
#define DT_N_INST_0_wch_ch5xx_flash_controller DT_N_S_soc_S_flash_controller_40001800
#define DT_N_NODELABEL_flash_controller        DT_N_S_soc_S_flash_controller_40001800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40001800_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40001800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_REG_IDX_0_VAL_ADDRESS 1073747968 /* 0x40001800 */
#define DT_N_S_soc_S_flash_controller_40001800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_flash_controller_40001800_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40001800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40001800_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40001800_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_40001800_COMPAT_MATCHES_wch_ch5xx_flash_controller 1
#define DT_N_S_soc_S_flash_controller_40001800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_COMPAT_VENDOR_IDX_0 "Nanjing Qinheng Microelectronics Co., Ltd."
#define DT_N_S_soc_S_flash_controller_40001800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_COMPAT_MODEL_IDX_0 "ch5xx-flash-controller"
#define DT_N_S_soc_S_flash_controller_40001800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40001800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40001800_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_40001800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_flash_controller_40001800_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_P_compatible {"wch,ch5xx-flash-controller"}
#define DT_N_S_soc_S_flash_controller_40001800_P_compatible_IDX_0 "wch,ch5xx-flash-controller"
#define DT_N_S_soc_S_flash_controller_40001800_P_compatible_IDX_0_STRING_UNQUOTED wch,ch5xx-flash-controller
#define DT_N_S_soc_S_flash_controller_40001800_P_compatible_IDX_0_STRING_TOKEN wch_ch5xx_flash_controller
#define DT_N_S_soc_S_flash_controller_40001800_P_compatible_IDX_0_STRING_UPPER_TOKEN WCH_CH5XX_FLASH_CONTROLLER
#define DT_N_S_soc_S_flash_controller_40001800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40001800, compatible, 0)
#define DT_N_S_soc_S_flash_controller_40001800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40001800, compatible, 0)
#define DT_N_S_soc_S_flash_controller_40001800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40001800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40001800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40001800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40001800_P_compatible_LEN 1
#define DT_N_S_soc_S_flash_controller_40001800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_P_reg {1073747968 /* 0x40001800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_flash_controller_40001800_P_reg_IDX_0 1073747968
#define DT_N_S_soc_S_flash_controller_40001800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_flash_controller_40001800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_flash_controller_40001800_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40001800/flash@0
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40001800_S_flash_0
 *
 * Binding (compatible = wch,nv-flash):
 *   $ZEPHYR_BASE/dts/bindings/mtd/wch,nv-flash.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_PATH "/soc/flash-controller@40001800/flash@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_FULL_NAME "flash@0"

/* Node parent (/soc/flash-controller@40001800) identifier: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_PARENT DT_N_S_soc_S_flash_controller_40001800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_FOREACH_NODELABEL(fn) fn(flash0)
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(flash0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_CHILD_NUM 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions)
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions)
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions)
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions)
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_ORD 30
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_ORD_STR_SORTABLE 00030

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_REQUIRES_ORDS \
	29, /* /soc/flash-controller@40001800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_SUPPORTS_ORDS \
	31, /* /soc/flash-controller@40001800/flash@0/partitions */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_EXISTS 1
#define DT_N_INST_0_wch_nv_flash DT_N_S_soc_S_flash_controller_40001800_S_flash_0
#define DT_N_INST_0_soc_nv_flash DT_N_S_soc_S_flash_controller_40001800_S_flash_0
#define DT_N_NODELABEL_flash0    DT_N_S_soc_S_flash_controller_40001800_S_flash_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_REG_NUM 2
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_REG_IDX_0_VAL_SIZE 458752 /* 0x70000 */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_REG_IDX_1_VAL_ADDRESS 458752 /* 0x70000 */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_REG_IDX_1_VAL_SIZE 32768 /* 0x8000 */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_REG_NAME_code_flash_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_REG_NAME_code_flash_VAL_ADDRESS DT_N_S_soc_S_flash_controller_40001800_S_flash_0_REG_IDX_0_VAL_ADDRESS
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_REG_NAME_code_flash_VAL_SIZE DT_N_S_soc_S_flash_controller_40001800_S_flash_0_REG_IDX_0_VAL_SIZE
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_REG_NAME_data_flash_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_REG_NAME_data_flash_VAL_ADDRESS DT_N_S_soc_S_flash_controller_40001800_S_flash_0_REG_IDX_1_VAL_ADDRESS
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_REG_NAME_data_flash_VAL_SIZE DT_N_S_soc_S_flash_controller_40001800_S_flash_0_REG_IDX_1_VAL_SIZE
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_COMPAT_MATCHES_wch_nv_flash 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_COMPAT_VENDOR_IDX_0 "Nanjing Qinheng Microelectronics Co., Ltd."
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_COMPAT_MODEL_IDX_0 "nv-flash"
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_COMPAT_MATCHES_soc_nv_flash 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_compatible {"wch,nv-flash", "soc-nv-flash"}
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_compatible_IDX_0 "wch,nv-flash"
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_compatible_IDX_0_STRING_UNQUOTED wch,nv-flash
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_compatible_IDX_0_STRING_TOKEN wch_nv_flash
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_compatible_IDX_0_STRING_UPPER_TOKEN WCH_NV_FLASH
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_compatible_IDX_1 "soc-nv-flash"
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_compatible_IDX_1_STRING_UNQUOTED soc-nv-flash
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_compatible_IDX_1_STRING_TOKEN soc_nv_flash
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_compatible_IDX_1_STRING_UPPER_TOKEN SOC_NV_FLASH
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0, compatible, 0) \
	fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0, compatible, 1)
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0, compatible, 1)
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_compatible_LEN 2
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_reg {0 /* 0x0 */, 458752 /* 0x70000 */, 458752 /* 0x70000 */, 32768 /* 0x8000 */}
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_reg_IDX_1 458752
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_reg_IDX_2 458752
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_reg_IDX_3 32768
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_reg_names {"code_flash", "data_flash"}
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_reg_names_IDX_0 "code_flash"
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_reg_names_IDX_0_STRING_UNQUOTED code_flash
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_reg_names_IDX_0_STRING_TOKEN code_flash
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_reg_names_IDX_0_STRING_UPPER_TOKEN CODE_FLASH
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_reg_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_reg_names_IDX_1 "data_flash"
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_reg_names_IDX_1_STRING_UNQUOTED data_flash
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_reg_names_IDX_1_STRING_TOKEN data_flash
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_reg_names_IDX_1_STRING_UPPER_TOKEN DATA_FLASH
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_reg_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_reg_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0, reg_names, 0) \
	fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0, reg_names, 1)
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_reg_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0, reg_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0, reg_names, 1)
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_reg_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0, reg_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0, reg_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_reg_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0, reg_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0, reg_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_reg_names_LEN 2
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_reg_names_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_erase_block_size 4096
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_erase_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_write_block_size 4
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_write_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_data_erase_block_size 256
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_data_erase_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_data_write_block_size 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_P_data_write_block_size_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40001800/flash@0/partitions
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions
 *
 * Binding (compatible = fixed-partitions):
 *   $ZEPHYR_BASE/dts/bindings/mtd/fixed-partitions.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_PATH "/soc/flash-controller@40001800/flash@0/partitions"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_FULL_NAME "partitions"

/* Node parent (/soc/flash-controller@40001800/flash@0) identifier: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_PARENT DT_N_S_soc_S_flash_controller_40001800_S_flash_0

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_NODELABEL_NUM 0
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_CHILD_NUM 4
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_CHILD_NUM_STATUS_OKAY 4
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000)
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000)
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000)
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000)
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_ORD 31
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_ORD_STR_SORTABLE 00031

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_REQUIRES_ORDS \
	30, /* /soc/flash-controller@40001800/flash@0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_SUPPORTS_ORDS \
	32, /* /soc/flash-controller@40001800/flash@0/partitions/partition@0 */ \
	33, /* /soc/flash-controller@40001800/flash@0/partitions/partition@C000 */ \
	34, /* /soc/flash-controller@40001800/flash@0/partitions/partition@3E000 */ \
	35, /* /soc/flash-controller@40001800/flash@0/partitions/partition@70000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_EXISTS 1
#define DT_N_INST_0_fixed_partitions DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_REG_NUM 0
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_COMPAT_MATCHES_fixed_partitions 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/flash-controller@40001800/flash@0/partitions/partition@0
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_PATH "/soc/flash-controller@40001800/flash@0/partitions/partition@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_FULL_NAME "partition@0"

/* Node parent (/soc/flash-controller@40001800/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_PARENT DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_FOREACH_NODELABEL(fn) fn(boot_partition)
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(boot_partition, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_ORD 32
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_ORD_STR_SORTABLE 00032

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_REQUIRES_ORDS \
	31, /* /soc/flash-controller@40001800/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_EXISTS 1
#define DT_N_NODELABEL_boot_partition DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_REG_IDX_0_VAL_SIZE 49152 /* 0xc000 */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_PARTITION_ID 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_P_label "mcuboot"
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_P_label_STRING_UNQUOTED mcuboot
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_P_label_STRING_TOKEN mcuboot
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_P_label_STRING_UPPER_TOKEN MCUBOOT
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_P_label_IDX_0 "mcuboot"
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0, label, 0)
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0, label, 0)
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_P_read_only 0
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_P_reg {0 /* 0x0 */, 49152 /* 0xc000 */}
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_P_reg_IDX_1 49152
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40001800/flash@0/partitions/partition@C000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_PATH "/soc/flash-controller@40001800/flash@0/partitions/partition@C000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_FULL_NAME "partition@C000"

/* Node parent (/soc/flash-controller@40001800/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_PARENT DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_FOREACH_NODELABEL(fn) fn(slot0_partition)
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_FOREACH_NODELABEL_VARGS(fn, ...) fn(slot0_partition, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_ORD 33
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_ORD_STR_SORTABLE 00033

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_REQUIRES_ORDS \
	31, /* /soc/flash-controller@40001800/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_EXISTS 1
#define DT_N_NODELABEL_slot0_partition DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_REG_IDX_0_VAL_ADDRESS 49152 /* 0xc000 */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_REG_IDX_0_VAL_SIZE 204800 /* 0x32000 */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_PARTITION_ID 1

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_P_label "image-0"
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_P_label_STRING_UNQUOTED image-0
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_P_label_STRING_TOKEN image_0
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_P_label_STRING_UPPER_TOKEN IMAGE_0
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_P_label_IDX_0 "image-0"
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000, label, 0)
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000, label, 0)
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_P_reg {49152 /* 0xc000 */, 204800 /* 0x32000 */}
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_P_reg_IDX_0 49152
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_P_reg_IDX_1 204800
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40001800/flash@0/partitions/partition@3E000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_PATH "/soc/flash-controller@40001800/flash@0/partitions/partition@3E000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_FULL_NAME "partition@3E000"

/* Node parent (/soc/flash-controller@40001800/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_PARENT DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_FOREACH_NODELABEL(fn) fn(slot1_partition)
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_FOREACH_NODELABEL_VARGS(fn, ...) fn(slot1_partition, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_ORD 34
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_ORD_STR_SORTABLE 00034

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_REQUIRES_ORDS \
	31, /* /soc/flash-controller@40001800/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_EXISTS 1
#define DT_N_NODELABEL_slot1_partition DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_REG_IDX_0_VAL_ADDRESS 253952 /* 0x3e000 */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_REG_IDX_0_VAL_SIZE 204800 /* 0x32000 */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_PARTITION_ID 2

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_P_label "image-1"
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_P_label_STRING_UNQUOTED image-1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_P_label_STRING_TOKEN image_1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_P_label_STRING_UPPER_TOKEN IMAGE_1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_P_label_IDX_0 "image-1"
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000, label, 0)
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000, label, 0)
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_P_reg {253952 /* 0x3e000 */, 204800 /* 0x32000 */}
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_P_reg_IDX_0 253952
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_P_reg_IDX_1 204800
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40001800/flash@0/partitions/partition@70000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_PATH "/soc/flash-controller@40001800/flash@0/partitions/partition@70000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_FULL_NAME "partition@70000"

/* Node parent (/soc/flash-controller@40001800/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_PARENT DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_FOREACH_NODELABEL(fn) fn(storage_partition)
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_FOREACH_NODELABEL_VARGS(fn, ...) fn(storage_partition, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_ORD 35
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_ORD_STR_SORTABLE 00035

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_REQUIRES_ORDS \
	31, /* /soc/flash-controller@40001800/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_EXISTS 1
#define DT_N_NODELABEL_storage_partition DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_REG_IDX_0_VAL_ADDRESS 458752 /* 0x70000 */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_REG_IDX_0_VAL_SIZE 32768 /* 0x8000 */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_PARTITION_ID 3

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_P_label "storage"
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_P_label_STRING_UNQUOTED storage
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_P_label_STRING_TOKEN storage
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_P_label_STRING_UPPER_TOKEN STORAGE
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_P_label_IDX_0 "storage"
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000, label, 0)
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000, label, 0)
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_P_reg {458752 /* 0x70000 */, 32768 /* 0x8000 */}
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_P_reg_IDX_0 458752
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_P_reg_IDX_1 32768
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/system-controller@40001000/pin-controller/pwm_default/group1
 *
 * Node identifier: DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_PATH "/soc/system-controller@40001000/pin-controller/pwm_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_FULL_NAME "group1"

/* Node parent (/soc/system-controller@40001000/pin-controller/pwm_default) identifier: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_PARENT DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_NODELABEL_NUM 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_CHILD_NUM 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_ORD 36
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_ORD_STR_SORTABLE 00036

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_REQUIRES_ORDS \
	13, /* /soc/system-controller@40001000/pin-controller/pwm_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_REG_NUM 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_RANGES_NUM 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_IRQ_NUM 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_IRQ_LEVEL 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_P_bias_pull_up 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_P_bias_pull_down 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_P_drive_push_pull 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_P_drive_open_drain 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_P_input_enable 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_P_output_enable 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_P_pinmux {658432 /* 0xa0c00 */, 658688 /* 0xa0d00 */, 656385 /* 0xa0401 */, 657153 /* 0xa0701 */, 658945 /* 0xa0e01 */, 661249 /* 0xa1701 */}
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_P_pinmux_IDX_0 658432
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_P_pinmux_IDX_1 658688
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_P_pinmux_IDX_2 656385
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_P_pinmux_IDX_3 657153
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_P_pinmux_IDX_4 658945
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_P_pinmux_IDX_5 661249
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_P_pinmux_IDX_5_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1, pinmux, 0) \
	fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1, pinmux, 1) \
	fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1, pinmux, 2) \
	fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1, pinmux, 3) \
	fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1, pinmux, 4) \
	fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1, pinmux, 5)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1, pinmux, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1, pinmux, 5)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1, pinmux, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1, pinmux, 5, __VA_ARGS__)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1, pinmux, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1, pinmux, 5, __VA_ARGS__)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_P_pinmux_LEN 6
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1_P_pinmux_EXISTS 1

/*
 * Devicetree node: /soc/system-controller@40001000/pin-controller/uart0_default/group1
 *
 * Node identifier: DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_PATH "/soc/system-controller@40001000/pin-controller/uart0_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_FULL_NAME "group1"

/* Node parent (/soc/system-controller@40001000/pin-controller/uart0_default) identifier: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_PARENT DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_NODELABEL_NUM 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_CHILD_NUM 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_ORD 37
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_ORD_STR_SORTABLE 00037

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_REQUIRES_ORDS \
	24, /* /soc/system-controller@40001000/pin-controller/uart0_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_REG_NUM 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_RANGES_NUM 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_IRQ_NUM 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_IRQ_LEVEL 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_P_bias_pull_up 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_P_bias_pull_down 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_P_drive_push_pull 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_P_drive_open_drain 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_P_input_enable 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_P_output_enable 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_P_pinmux {263937 /* 0x40701 */}
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_P_pinmux_IDX_0 263937
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1, pinmux, 0)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1, pinmux, 0)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1, pinmux, 0, __VA_ARGS__)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1, pinmux, 0, __VA_ARGS__)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_P_pinmux_LEN 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1_P_pinmux_EXISTS 1

/*
 * Devicetree node: /soc/system-controller@40001000/pin-controller/uart0_default/group2
 *
 * Node identifier: DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_PATH "/soc/system-controller@40001000/pin-controller/uart0_default/group2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_FULL_NAME "group2"

/* Node parent (/soc/system-controller@40001000/pin-controller/uart0_default) identifier: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_PARENT DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_NODELABEL_NUM 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_CHILD_NUM 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_ORD 38
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_ORD_STR_SORTABLE 00038

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_REQUIRES_ORDS \
	24, /* /soc/system-controller@40001000/pin-controller/uart0_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_REG_NUM 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_RANGES_NUM 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_IRQ_NUM 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_IRQ_LEVEL 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_P_bias_pull_up 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_P_bias_pull_down 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_P_drive_push_pull 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_P_drive_open_drain 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_P_input_enable 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_P_output_enable 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_P_pinmux {263169 /* 0x40401 */}
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_P_pinmux_IDX_0 263169
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2, pinmux, 0)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2, pinmux, 0)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2, pinmux, 0, __VA_ARGS__)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2, pinmux, 0, __VA_ARGS__)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_P_pinmux_LEN 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2_P_pinmux_EXISTS 1

/*
 * Devicetree node: /soc/system-controller@40001000/pin-controller/uart1_default/group1
 *
 * Node identifier: DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_PATH "/soc/system-controller@40001000/pin-controller/uart1_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_FULL_NAME "group1"

/* Node parent (/soc/system-controller@40001000/pin-controller/uart1_default) identifier: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_PARENT DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_NODELABEL_NUM 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_CHILD_NUM 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_ORD 39
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_ORD_STR_SORTABLE 00039

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_REQUIRES_ORDS \
	26, /* /soc/system-controller@40001000/pin-controller/uart1_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_REG_NUM 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_RANGES_NUM 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_IRQ_NUM 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_IRQ_LEVEL 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_P_bias_pull_up 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_P_bias_pull_down 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_P_drive_push_pull 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_P_drive_open_drain 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_P_input_enable 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_P_output_enable 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_P_pinmux {329984 /* 0x50900 */}
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_P_pinmux_IDX_0 329984
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1, pinmux, 0)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1, pinmux, 0)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1, pinmux, 0, __VA_ARGS__)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1, pinmux, 0, __VA_ARGS__)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_P_pinmux_LEN 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1_P_pinmux_EXISTS 1

/*
 * Devicetree node: /soc/system-controller@40001000/pin-controller/uart1_default/group2
 *
 * Node identifier: DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_PATH "/soc/system-controller@40001000/pin-controller/uart1_default/group2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_FULL_NAME "group2"

/* Node parent (/soc/system-controller@40001000/pin-controller/uart1_default) identifier: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_PARENT DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_NODELABEL_NUM 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_CHILD_NUM 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_ORD 40
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_ORD_STR_SORTABLE 00040

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_REQUIRES_ORDS \
	26, /* /soc/system-controller@40001000/pin-controller/uart1_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_REG_NUM 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_RANGES_NUM 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_IRQ_NUM 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_IRQ_LEVEL 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_P_bias_pull_up 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_P_bias_pull_down 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_P_drive_push_pull 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_P_drive_open_drain 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_P_input_enable 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_P_output_enable 0
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_P_pinmux {329728 /* 0x50800 */}
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_P_pinmux_IDX_0 329728
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2, pinmux, 0)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2, pinmux, 0)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2, pinmux, 0, __VA_ARGS__)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2, pinmux, 0, __VA_ARGS__)
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_P_pinmux_LEN 1
#define DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2_P_pinmux_EXISTS 1

/*
 * Devicetree node: /soc/udc@40008000
 *
 * Node identifier: DT_N_S_soc_S_udc_40008000
 *
 * Binding (compatible = wch,ch58x-udc):
 *   $ZEPHYR_BASE/dts/bindings/usb/wch,ch58x-udc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_udc_40008000_PATH "/soc/udc@40008000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_udc_40008000_FULL_NAME "udc@40008000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_udc_40008000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_udc_40008000_CHILD_IDX 9

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_udc_40008000_NODELABEL_NUM 2
#define DT_N_S_soc_S_udc_40008000_FOREACH_NODELABEL(fn) fn(usbd) fn(zephyr_udc0)
#define DT_N_S_soc_S_udc_40008000_FOREACH_NODELABEL_VARGS(fn, ...) fn(usbd, __VA_ARGS__) fn(zephyr_udc0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_udc_40008000_CHILD_NUM 1
#define DT_N_S_soc_S_udc_40008000_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_udc_40008000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0)
#define DT_N_S_soc_S_udc_40008000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0)
#define DT_N_S_soc_S_udc_40008000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0, __VA_ARGS__)
#define DT_N_S_soc_S_udc_40008000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0, __VA_ARGS__)
#define DT_N_S_soc_S_udc_40008000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0)
#define DT_N_S_soc_S_udc_40008000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0)
#define DT_N_S_soc_S_udc_40008000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0, __VA_ARGS__)
#define DT_N_S_soc_S_udc_40008000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_udc_40008000_ORD 41
#define DT_N_S_soc_S_udc_40008000_ORD_STR_SORTABLE 00041

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_udc_40008000_REQUIRES_ORDS \
	5, /* /soc */ \
	7, /* /clocks/clkmux */ \
	8, /* /soc/pfic@e000e000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_udc_40008000_SUPPORTS_ORDS \
	42, /* /soc/udc@40008000/cdc_acm_uart0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_udc_40008000_EXISTS 1
#define DT_N_INST_0_wch_ch58x_udc  DT_N_S_soc_S_udc_40008000
#define DT_N_NODELABEL_usbd        DT_N_S_soc_S_udc_40008000
#define DT_N_NODELABEL_zephyr_udc0 DT_N_S_soc_S_udc_40008000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_udc_40008000_REG_NUM 1
#define DT_N_S_soc_S_udc_40008000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_udc_40008000_REG_IDX_0_VAL_ADDRESS 1073774592 /* 0x40008000 */
#define DT_N_S_soc_S_udc_40008000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_udc_40008000_RANGES_NUM 0
#define DT_N_S_soc_S_udc_40008000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_udc_40008000_IRQ_NUM 1
#define DT_N_S_soc_S_udc_40008000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_udc_40008000_IRQ_IDX_0_VAL_irq 22
#define DT_N_S_soc_S_udc_40008000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_udc_40008000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_udc_40008000_IRQ_IDX_0_VAL_priority 8
#define DT_N_S_soc_S_udc_40008000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_udc_40008000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_pfic_e000e000
#define DT_N_S_soc_S_udc_40008000_IRQ_LEVEL 1
#define DT_N_S_soc_S_udc_40008000_COMPAT_MATCHES_wch_ch58x_udc 1
#define DT_N_S_soc_S_udc_40008000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_udc_40008000_COMPAT_VENDOR_IDX_0 "Nanjing Qinheng Microelectronics Co., Ltd."
#define DT_N_S_soc_S_udc_40008000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_udc_40008000_COMPAT_MODEL_IDX_0 "ch58x-udc"
#define DT_N_S_soc_S_udc_40008000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_udc_40008000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_udc_40008000_P_wakeup_source 0
#define DT_N_S_soc_S_udc_40008000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_udc_40008000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_udc_40008000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_udc_40008000_P_status "okay"
#define DT_N_S_soc_S_udc_40008000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_udc_40008000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_udc_40008000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_udc_40008000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_udc_40008000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_udc_40008000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_udc_40008000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_udc_40008000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_udc_40008000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_udc_40008000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_udc_40008000, status, 0)
#define DT_N_S_soc_S_udc_40008000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_udc_40008000, status, 0)
#define DT_N_S_soc_S_udc_40008000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_udc_40008000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_udc_40008000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_udc_40008000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_udc_40008000_P_status_LEN 1
#define DT_N_S_soc_S_udc_40008000_P_status_EXISTS 1
#define DT_N_S_soc_S_udc_40008000_P_compatible {"wch,ch58x-udc"}
#define DT_N_S_soc_S_udc_40008000_P_compatible_IDX_0 "wch,ch58x-udc"
#define DT_N_S_soc_S_udc_40008000_P_compatible_IDX_0_STRING_UNQUOTED wch,ch58x-udc
#define DT_N_S_soc_S_udc_40008000_P_compatible_IDX_0_STRING_TOKEN wch_ch58x_udc
#define DT_N_S_soc_S_udc_40008000_P_compatible_IDX_0_STRING_UPPER_TOKEN WCH_CH58X_UDC
#define DT_N_S_soc_S_udc_40008000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_udc_40008000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_udc_40008000, compatible, 0)
#define DT_N_S_soc_S_udc_40008000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_udc_40008000, compatible, 0)
#define DT_N_S_soc_S_udc_40008000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_udc_40008000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_udc_40008000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_udc_40008000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_udc_40008000_P_compatible_LEN 1
#define DT_N_S_soc_S_udc_40008000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_udc_40008000_P_reg {1073774592 /* 0x40008000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_udc_40008000_P_reg_IDX_0 1073774592
#define DT_N_S_soc_S_udc_40008000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_udc_40008000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_udc_40008000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_udc_40008000_P_reg_EXISTS 1
#define DT_N_S_soc_S_udc_40008000_P_interrupts {22 /* 0x16 */, 8 /* 0x8 */}
#define DT_N_S_soc_S_udc_40008000_P_interrupts_IDX_0 22
#define DT_N_S_soc_S_udc_40008000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_udc_40008000_P_interrupts_IDX_1 8
#define DT_N_S_soc_S_udc_40008000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_udc_40008000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_udc_40008000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_udc_40008000_P_clocks_IDX_0_PH DT_N_S_clocks_S_clkmux
#define DT_N_S_soc_S_udc_40008000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_udc_40008000, clocks, 0)
#define DT_N_S_soc_S_udc_40008000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_udc_40008000, clocks, 0)
#define DT_N_S_soc_S_udc_40008000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_udc_40008000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_udc_40008000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_udc_40008000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_udc_40008000_P_clocks_LEN 1
#define DT_N_S_soc_S_udc_40008000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_udc_40008000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_udc_40008000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_udc_40008000_P_maximum_speed "full-speed"
#define DT_N_S_soc_S_udc_40008000_P_maximum_speed_STRING_UNQUOTED full-speed
#define DT_N_S_soc_S_udc_40008000_P_maximum_speed_STRING_TOKEN full_speed
#define DT_N_S_soc_S_udc_40008000_P_maximum_speed_STRING_UPPER_TOKEN FULL_SPEED
#define DT_N_S_soc_S_udc_40008000_P_maximum_speed_IDX_0 "full-speed"
#define DT_N_S_soc_S_udc_40008000_P_maximum_speed_IDX_0_EXISTS 1
#define DT_N_S_soc_S_udc_40008000_P_maximum_speed_ENUM_IDX 1
#define DT_N_S_soc_S_udc_40008000_P_maximum_speed_ENUM_VAL_full_speed_EXISTS 1
#define DT_N_S_soc_S_udc_40008000_P_maximum_speed_ENUM_TOKEN full_speed
#define DT_N_S_soc_S_udc_40008000_P_maximum_speed_ENUM_UPPER_TOKEN FULL_SPEED
#define DT_N_S_soc_S_udc_40008000_P_maximum_speed_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_udc_40008000, maximum_speed, 0)
#define DT_N_S_soc_S_udc_40008000_P_maximum_speed_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_udc_40008000, maximum_speed, 0)
#define DT_N_S_soc_S_udc_40008000_P_maximum_speed_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_udc_40008000, maximum_speed, 0, __VA_ARGS__)
#define DT_N_S_soc_S_udc_40008000_P_maximum_speed_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_udc_40008000, maximum_speed, 0, __VA_ARGS__)
#define DT_N_S_soc_S_udc_40008000_P_maximum_speed_LEN 1
#define DT_N_S_soc_S_udc_40008000_P_maximum_speed_EXISTS 1
#define DT_N_S_soc_S_udc_40008000_P_num_bidir_endpoints 8
#define DT_N_S_soc_S_udc_40008000_P_num_bidir_endpoints_EXISTS 1
#define DT_N_S_soc_S_udc_40008000_P_num_in_endpoints 7
#define DT_N_S_soc_S_udc_40008000_P_num_in_endpoints_EXISTS 1
#define DT_N_S_soc_S_udc_40008000_P_num_out_endpoints 7
#define DT_N_S_soc_S_udc_40008000_P_num_out_endpoints_EXISTS 1

/*
 * Devicetree node: /soc/udc@40008000/cdc_acm_uart0
 *
 * Node identifier: DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0
 *
 * Binding (compatible = zephyr,cdc-acm-uart):
 *   $ZEPHYR_BASE/dts/bindings/serial/zephyr,cdc-acm-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_PATH "/soc/udc@40008000/cdc_acm_uart0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_FULL_NAME "cdc_acm_uart0"

/* Node parent (/soc/udc@40008000) identifier: */
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_PARENT DT_N_S_soc_S_udc_40008000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_NODELABEL_NUM 1
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_FOREACH_NODELABEL(fn) fn(cdc_acm_uart0)
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_FOREACH_NODELABEL_VARGS(fn, ...) fn(cdc_acm_uart0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_CHILD_NUM 1
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0)
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0)
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0, __VA_ARGS__)
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0, __VA_ARGS__)
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0)
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0)
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0, __VA_ARGS__)
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_ORD 42
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_ORD_STR_SORTABLE 00042

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_REQUIRES_ORDS \
	41, /* /soc/udc@40008000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_SUPPORTS_ORDS \
	43, /* /soc/udc@40008000/cdc_acm_uart0/vcp_link_cdc0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_EXISTS 1
#define DT_N_INST_0_zephyr_cdc_acm_uart DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0
#define DT_N_NODELABEL_cdc_acm_uart0    DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0

/* Bus info (controller: '/soc/udc@40008000', type: '['usb']') */
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_BUS_usb 1
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_BUS DT_N_S_soc_S_udc_40008000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_REG_NUM 0
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_RANGES_NUM 0
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_IRQ_NUM 0
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_IRQ_LEVEL 0
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_COMPAT_MATCHES_zephyr_cdc_acm_uart 1
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_COMPAT_MODEL_IDX_0 "cdc-acm-uart"
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_P_wakeup_source 0
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_P_compatible {"zephyr,cdc-acm-uart"}
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_P_compatible_IDX_0 "zephyr,cdc-acm-uart"
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_P_compatible_IDX_0_STRING_UNQUOTED zephyr,cdc-acm-uart
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_P_compatible_IDX_0_STRING_TOKEN zephyr_cdc_acm_uart
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_CDC_ACM_UART
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0, compatible, 0)
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0, compatible, 0)
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_P_compatible_LEN 1
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_P_hw_flow_control 0
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_P_tx_fifo_size 1024
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_P_tx_fifo_size_EXISTS 1
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_P_rx_fifo_size 1024
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_P_rx_fifo_size_EXISTS 1

/*
 * Devicetree node: /soc/udc@40008000/cdc_acm_uart0/vcp_link_cdc0
 *
 * Node identifier: DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0
 *
 * Binding (compatible = vcp,link-uart):
 *   /home/davit/Desktop/sim/wch-test/modules/vcp/dts/bindings/vcp,link-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_PATH "/soc/udc@40008000/cdc_acm_uart0/vcp_link_cdc0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_FULL_NAME "vcp_link_cdc0"

/* Node parent (/soc/udc@40008000/cdc_acm_uart0) identifier: */
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_PARENT DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_NODELABEL_NUM 1
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_FOREACH_NODELABEL(fn) fn(vcp_link_cdc0)
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_FOREACH_NODELABEL_VARGS(fn, ...) fn(vcp_link_cdc0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_CHILD_NUM 0
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_ORD 43
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_ORD_STR_SORTABLE 00043

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_REQUIRES_ORDS \
	42, /* /soc/udc@40008000/cdc_acm_uart0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_SUPPORTS_ORDS \
	44, /* /vcpmap */ \
	45, /* /vcpmap/vcp_usb0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_EXISTS 1
#define DT_N_INST_0_vcp_link_uart    DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0
#define DT_N_NODELABEL_vcp_link_cdc0 DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0

/* Bus info (controller: '/soc/udc@40008000/cdc_acm_uart0', type: '['uart']') */
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_BUS_uart 1
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_BUS DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_REG_NUM 0
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_RANGES_NUM 0
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_IRQ_NUM 0
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_IRQ_LEVEL 0
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_COMPAT_MATCHES_vcp_link_uart 1
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_COMPAT_VENDOR_IDX_0 "Vishup Communications Protocol"
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_COMPAT_MODEL_IDX_0 "link-uart"
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_P_wakeup_source 0
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_P_compatible {"vcp,link-uart"}
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_P_compatible_IDX_0 "vcp,link-uart"
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_P_compatible_IDX_0_STRING_UNQUOTED vcp,link-uart
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_P_compatible_IDX_0_STRING_TOKEN vcp_link_uart
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_P_compatible_IDX_0_STRING_UPPER_TOKEN VCP_LINK_UART
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0, compatible, 0)
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0, compatible, 0)
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_P_compatible_LEN 1
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_P_rx_max_size 512
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_P_rx_max_size_EXISTS 1
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_P_tx_max_size 512
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_P_tx_max_size_EXISTS 1
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_P_vcp_addr 2
#define DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0_P_vcp_addr_EXISTS 1

/*
 * Devicetree node: /vcpmap
 *
 * Node identifier: DT_N_S_vcpmap
 *
 * Binding (compatible = vcp,map):
 *   /home/davit/Desktop/sim/wch-test/modules/vcp/dts/bindings/vcp,map.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_vcpmap_PATH "/vcpmap"

/* Node's name with unit-address: */
#define DT_N_S_vcpmap_FULL_NAME "vcpmap"

/* Node parent (/) identifier: */
#define DT_N_S_vcpmap_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_vcpmap_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_vcpmap_NODELABEL_NUM 0
#define DT_N_S_vcpmap_FOREACH_NODELABEL(fn) 
#define DT_N_S_vcpmap_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_vcpmap_CHILD_NUM 1
#define DT_N_S_vcpmap_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_vcpmap_FOREACH_CHILD(fn) fn(DT_N_S_vcpmap_S_vcp_usb0)
#define DT_N_S_vcpmap_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_vcpmap_S_vcp_usb0)
#define DT_N_S_vcpmap_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_vcpmap_S_vcp_usb0, __VA_ARGS__)
#define DT_N_S_vcpmap_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vcpmap_S_vcp_usb0, __VA_ARGS__)
#define DT_N_S_vcpmap_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_vcpmap_S_vcp_usb0)
#define DT_N_S_vcpmap_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_vcpmap_S_vcp_usb0)
#define DT_N_S_vcpmap_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_vcpmap_S_vcp_usb0, __VA_ARGS__)
#define DT_N_S_vcpmap_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vcpmap_S_vcp_usb0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_vcpmap_ORD 44
#define DT_N_S_vcpmap_ORD_STR_SORTABLE 00044

/* Ordinals for what this node depends on directly: */
#define DT_N_S_vcpmap_REQUIRES_ORDS \
	0, /* / */ \
	43, /* /soc/udc@40008000/cdc_acm_uart0/vcp_link_cdc0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_vcpmap_SUPPORTS_ORDS \
	45, /* /vcpmap/vcp_usb0 */

/* Existence and alternate IDs: */
#define DT_N_S_vcpmap_EXISTS 1
#define DT_N_INST_0_vcp_map DT_N_S_vcpmap

/* Macros for properties that are special in the specification: */
#define DT_N_S_vcpmap_REG_NUM 0
#define DT_N_S_vcpmap_RANGES_NUM 0
#define DT_N_S_vcpmap_FOREACH_RANGE(fn) 
#define DT_N_S_vcpmap_IRQ_NUM 0
#define DT_N_S_vcpmap_IRQ_LEVEL 0
#define DT_N_S_vcpmap_COMPAT_MATCHES_vcp_map 1
#define DT_N_S_vcpmap_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_vcpmap_COMPAT_VENDOR_IDX_0 "Vishup Communications Protocol"
#define DT_N_S_vcpmap_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_vcpmap_COMPAT_MODEL_IDX_0 "map"
#define DT_N_S_vcpmap_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_vcpmap_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_vcpmap_P_wakeup_source 0
#define DT_N_S_vcpmap_P_wakeup_source_EXISTS 1
#define DT_N_S_vcpmap_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_vcpmap_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_vcpmap_P_compatible {"vcp,map"}
#define DT_N_S_vcpmap_P_compatible_IDX_0 "vcp,map"
#define DT_N_S_vcpmap_P_compatible_IDX_0_STRING_UNQUOTED vcp,map
#define DT_N_S_vcpmap_P_compatible_IDX_0_STRING_TOKEN vcp_map
#define DT_N_S_vcpmap_P_compatible_IDX_0_STRING_UPPER_TOKEN VCP_MAP
#define DT_N_S_vcpmap_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_vcpmap_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_vcpmap, compatible, 0)
#define DT_N_S_vcpmap_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_vcpmap, compatible, 0)
#define DT_N_S_vcpmap_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_vcpmap, compatible, 0, __VA_ARGS__)
#define DT_N_S_vcpmap_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vcpmap, compatible, 0, __VA_ARGS__)
#define DT_N_S_vcpmap_P_compatible_LEN 1
#define DT_N_S_vcpmap_P_compatible_EXISTS 1
#define DT_N_S_vcpmap_P_zephyr_deferred_init 0
#define DT_N_S_vcpmap_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /vcpmap/vcp_usb0
 *
 * Node identifier: DT_N_S_vcpmap_S_vcp_usb0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_vcpmap_S_vcp_usb0_PATH "/vcpmap/vcp_usb0"

/* Node's name with unit-address: */
#define DT_N_S_vcpmap_S_vcp_usb0_FULL_NAME "vcp_usb0"

/* Node parent (/vcpmap) identifier: */
#define DT_N_S_vcpmap_S_vcp_usb0_PARENT DT_N_S_vcpmap

/* Node's index in its parent's list of children: */
#define DT_N_S_vcpmap_S_vcp_usb0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_vcpmap_S_vcp_usb0_NODELABEL_NUM 1
#define DT_N_S_vcpmap_S_vcp_usb0_FOREACH_NODELABEL(fn) fn(vcp_usb0)
#define DT_N_S_vcpmap_S_vcp_usb0_FOREACH_NODELABEL_VARGS(fn, ...) fn(vcp_usb0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_vcpmap_S_vcp_usb0_CHILD_NUM 0
#define DT_N_S_vcpmap_S_vcp_usb0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_vcpmap_S_vcp_usb0_FOREACH_CHILD(fn) 
#define DT_N_S_vcpmap_S_vcp_usb0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_vcpmap_S_vcp_usb0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_vcpmap_S_vcp_usb0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_vcpmap_S_vcp_usb0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_vcpmap_S_vcp_usb0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_vcpmap_S_vcp_usb0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_vcpmap_S_vcp_usb0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_vcpmap_S_vcp_usb0_ORD 45
#define DT_N_S_vcpmap_S_vcp_usb0_ORD_STR_SORTABLE 00045

/* Ordinals for what this node depends on directly: */
#define DT_N_S_vcpmap_S_vcp_usb0_REQUIRES_ORDS \
	43, /* /soc/udc@40008000/cdc_acm_uart0/vcp_link_cdc0 */ \
	44, /* /vcpmap */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_vcpmap_S_vcp_usb0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_vcpmap_S_vcp_usb0_EXISTS 1
#define DT_N_NODELABEL_vcp_usb0 DT_N_S_vcpmap_S_vcp_usb0

/* Macros for properties that are special in the specification: */
#define DT_N_S_vcpmap_S_vcp_usb0_REG_NUM 0
#define DT_N_S_vcpmap_S_vcp_usb0_RANGES_NUM 0
#define DT_N_S_vcpmap_S_vcp_usb0_FOREACH_RANGE(fn) 
#define DT_N_S_vcpmap_S_vcp_usb0_IRQ_NUM 0
#define DT_N_S_vcpmap_S_vcp_usb0_IRQ_LEVEL 0
#define DT_N_S_vcpmap_S_vcp_usb0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_vcpmap_S_vcp_usb0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_vcpmap_S_vcp_usb0_P_secure 0
#define DT_N_S_vcpmap_S_vcp_usb0_P_secure_EXISTS 1
#define DT_N_S_vcpmap_S_vcp_usb0_P_link DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0
#define DT_N_S_vcpmap_S_vcp_usb0_P_link_IDX_0 DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0
#define DT_N_S_vcpmap_S_vcp_usb0_P_link_IDX_0_PH DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0
#define DT_N_S_vcpmap_S_vcp_usb0_P_link_IDX_0_EXISTS 1
#define DT_N_S_vcpmap_S_vcp_usb0_P_link_FOREACH_PROP_ELEM(fn) fn(DT_N_S_vcpmap_S_vcp_usb0, link, 0)
#define DT_N_S_vcpmap_S_vcp_usb0_P_link_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_vcpmap_S_vcp_usb0, link, 0)
#define DT_N_S_vcpmap_S_vcp_usb0_P_link_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_vcpmap_S_vcp_usb0, link, 0, __VA_ARGS__)
#define DT_N_S_vcpmap_S_vcp_usb0_P_link_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vcpmap_S_vcp_usb0, link, 0, __VA_ARGS__)
#define DT_N_S_vcpmap_S_vcp_usb0_P_link_LEN 1
#define DT_N_S_vcpmap_S_vcp_usb0_P_link_EXISTS 1
#define DT_N_S_vcpmap_S_vcp_usb0_P_rx_timeout 0
#define DT_N_S_vcpmap_S_vcp_usb0_P_rx_timeout_EXISTS 1
#define DT_N_S_vcpmap_S_vcp_usb0_P_req_buf_size 512
#define DT_N_S_vcpmap_S_vcp_usb0_P_req_buf_size_EXISTS 1
#define DT_N_S_vcpmap_S_vcp_usb0_P_resp_buf_size 512
#define DT_N_S_vcpmap_S_vcp_usb0_P_resp_buf_size_EXISTS 1
#define DT_N_S_vcpmap_S_vcp_usb0_P_vcp_address_mask 255
#define DT_N_S_vcpmap_S_vcp_usb0_P_vcp_address_mask_EXISTS 1
#define DT_N_S_vcpmap_S_vcp_usb0_P_vcp_role "VCP_TRANSP_ROLE_SLAVE"
#define DT_N_S_vcpmap_S_vcp_usb0_P_vcp_role_STRING_UNQUOTED VCP_TRANSP_ROLE_SLAVE
#define DT_N_S_vcpmap_S_vcp_usb0_P_vcp_role_STRING_TOKEN VCP_TRANSP_ROLE_SLAVE
#define DT_N_S_vcpmap_S_vcp_usb0_P_vcp_role_STRING_UPPER_TOKEN VCP_TRANSP_ROLE_SLAVE
#define DT_N_S_vcpmap_S_vcp_usb0_P_vcp_role_IDX_0 "VCP_TRANSP_ROLE_SLAVE"
#define DT_N_S_vcpmap_S_vcp_usb0_P_vcp_role_IDX_0_EXISTS 1
#define DT_N_S_vcpmap_S_vcp_usb0_P_vcp_role_ENUM_IDX 0
#define DT_N_S_vcpmap_S_vcp_usb0_P_vcp_role_ENUM_VAL_VCP_TRANSP_ROLE_SLAVE_EXISTS 1
#define DT_N_S_vcpmap_S_vcp_usb0_P_vcp_role_ENUM_TOKEN VCP_TRANSP_ROLE_SLAVE
#define DT_N_S_vcpmap_S_vcp_usb0_P_vcp_role_ENUM_UPPER_TOKEN VCP_TRANSP_ROLE_SLAVE
#define DT_N_S_vcpmap_S_vcp_usb0_P_vcp_role_FOREACH_PROP_ELEM(fn) fn(DT_N_S_vcpmap_S_vcp_usb0, vcp_role, 0)
#define DT_N_S_vcpmap_S_vcp_usb0_P_vcp_role_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_vcpmap_S_vcp_usb0, vcp_role, 0)
#define DT_N_S_vcpmap_S_vcp_usb0_P_vcp_role_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_vcpmap_S_vcp_usb0, vcp_role, 0, __VA_ARGS__)
#define DT_N_S_vcpmap_S_vcp_usb0_P_vcp_role_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_vcpmap_S_vcp_usb0, vcp_role, 0, __VA_ARGS__)
#define DT_N_S_vcpmap_S_vcp_usb0_P_vcp_role_LEN 1
#define DT_N_S_vcpmap_S_vcp_usb0_P_vcp_role_EXISTS 1

/*
 * Chosen nodes
 */
#define DT_CHOSEN_zephyr_flash_controller        DT_N_S_soc_S_flash_controller_40001800
#define DT_CHOSEN_zephyr_flash_controller_EXISTS 1
#define DT_CHOSEN_zephyr_sram                    DT_N_S_soc_S_memory_20000000
#define DT_CHOSEN_zephyr_sram_EXISTS             1
#define DT_CHOSEN_zephyr_flash                   DT_N_S_soc_S_flash_controller_40001800_S_flash_0
#define DT_CHOSEN_zephyr_flash_EXISTS            1
#define DT_CHOSEN_zephyr_console                 DT_N_S_soc_S_uart_40003400
#define DT_CHOSEN_zephyr_console_EXISTS          1
#define DT_CHOSEN_zephyr_shell_uart              DT_N_S_soc_S_uart_40003400
#define DT_CHOSEN_zephyr_shell_uart_EXISTS       1
#define DT_CHOSEN_zephyr_code_partition          DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000
#define DT_CHOSEN_zephyr_code_partition_EXISTS   1

/* Macros for iterating over all nodes and enabled nodes */
#define DT_FOREACH_HELPER(fn) fn(DT_N) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_soc) fn(DT_N_S_soc_S_pfic_e000e000) fn(DT_N_S_soc_S_systick_e000f000) fn(DT_N_S_soc_S_flash_controller_40001800) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_system_controller_40001000) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1) fn(DT_N_S_soc_S_gpio_400010a0) fn(DT_N_S_soc_S_gpio_400010c0) fn(DT_N_S_soc_S_uart_40003000) fn(DT_N_S_soc_S_uart_40003400) fn(DT_N_S_soc_S_udc_40008000) fn(DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0) fn(DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0) fn(DT_N_S_soc_S_udc_40008400) fn(DT_N_S_soc_S_pwm_40005000) fn(DT_N_S_chosen) fn(DT_N_S_clocks) fn(DT_N_S_clocks_S_clkmux) fn(DT_N_S_aliases) fn(DT_N_S_pwmleds) fn(DT_N_S_pwmleds_S_pwm_led_pb7) fn(DT_N_S_pwmleds_S_pwm_led_pa13) fn(DT_N_S_pwmleds_S_pwm_led_pa12) fn(DT_N_S_pwmleds_S_pwm_led_pb4) fn(DT_N_S_pwmleds_S_pwm_led_pb23) fn(DT_N_S_pwmleds_S_pwm_led_pb14) fn(DT_N_S_vcpmap) fn(DT_N_S_vcpmap_S_vcp_usb0)
#define DT_FOREACH_OKAY_HELPER(fn) fn(DT_N) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_soc) fn(DT_N_S_soc_S_pfic_e000e000) fn(DT_N_S_soc_S_systick_e000f000) fn(DT_N_S_soc_S_flash_controller_40001800) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_system_controller_40001000) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1) fn(DT_N_S_soc_S_gpio_400010a0) fn(DT_N_S_soc_S_gpio_400010c0) fn(DT_N_S_soc_S_uart_40003400) fn(DT_N_S_soc_S_udc_40008000) fn(DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0) fn(DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0) fn(DT_N_S_soc_S_udc_40008400) fn(DT_N_S_soc_S_pwm_40005000) fn(DT_N_S_chosen) fn(DT_N_S_clocks) fn(DT_N_S_clocks_S_clkmux) fn(DT_N_S_aliases) fn(DT_N_S_pwmleds) fn(DT_N_S_pwmleds_S_pwm_led_pb7) fn(DT_N_S_pwmleds_S_pwm_led_pa13) fn(DT_N_S_pwmleds_S_pwm_led_pa12) fn(DT_N_S_pwmleds_S_pwm_led_pb4) fn(DT_N_S_pwmleds_S_pwm_led_pb23) fn(DT_N_S_pwmleds_S_pwm_led_pb14) fn(DT_N_S_vcpmap) fn(DT_N_S_vcpmap_S_vcp_usb0)
#define DT_FOREACH_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_pfic_e000e000, __VA_ARGS__) fn(DT_N_S_soc_S_systick_e000f000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40001800, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_system_controller_40001000, __VA_ARGS__) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller, __VA_ARGS__) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default, __VA_ARGS__) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default, __VA_ARGS__) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2, __VA_ARGS__) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default, __VA_ARGS__) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_400010a0, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_400010c0, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40003400, __VA_ARGS__) fn(DT_N_S_soc_S_udc_40008000, __VA_ARGS__) fn(DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0, __VA_ARGS__) fn(DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0, __VA_ARGS__) fn(DT_N_S_soc_S_udc_40008400, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_40005000, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_clocks_S_clkmux, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_pwmleds, __VA_ARGS__) fn(DT_N_S_pwmleds_S_pwm_led_pb7, __VA_ARGS__) fn(DT_N_S_pwmleds_S_pwm_led_pa13, __VA_ARGS__) fn(DT_N_S_pwmleds_S_pwm_led_pa12, __VA_ARGS__) fn(DT_N_S_pwmleds_S_pwm_led_pb4, __VA_ARGS__) fn(DT_N_S_pwmleds_S_pwm_led_pb23, __VA_ARGS__) fn(DT_N_S_pwmleds_S_pwm_led_pb14, __VA_ARGS__) fn(DT_N_S_vcpmap, __VA_ARGS__) fn(DT_N_S_vcpmap_S_vcp_usb0, __VA_ARGS__)
#define DT_FOREACH_OKAY_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_pfic_e000e000, __VA_ARGS__) fn(DT_N_S_soc_S_systick_e000f000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40001800, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_system_controller_40001000, __VA_ARGS__) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller, __VA_ARGS__) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default, __VA_ARGS__) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default, __VA_ARGS__) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_uart1_default_S_group2, __VA_ARGS__) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default, __VA_ARGS__) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller_S_pwm_default_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_400010a0, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_400010c0, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40003400, __VA_ARGS__) fn(DT_N_S_soc_S_udc_40008000, __VA_ARGS__) fn(DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0, __VA_ARGS__) fn(DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0, __VA_ARGS__) fn(DT_N_S_soc_S_udc_40008400, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_40005000, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_clocks_S_clkmux, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_pwmleds, __VA_ARGS__) fn(DT_N_S_pwmleds_S_pwm_led_pb7, __VA_ARGS__) fn(DT_N_S_pwmleds_S_pwm_led_pa13, __VA_ARGS__) fn(DT_N_S_pwmleds_S_pwm_led_pa12, __VA_ARGS__) fn(DT_N_S_pwmleds_S_pwm_led_pb4, __VA_ARGS__) fn(DT_N_S_pwmleds_S_pwm_led_pb23, __VA_ARGS__) fn(DT_N_S_pwmleds_S_pwm_led_pb14, __VA_ARGS__) fn(DT_N_S_vcpmap, __VA_ARGS__) fn(DT_N_S_vcpmap_S_vcp_usb0, __VA_ARGS__)
#define DT_COMPAT_fixed_partitions_LABEL_mcuboot DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_0
#define DT_COMPAT_fixed_partitions_LABEL_mcuboot_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_0 DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_c000
#define DT_COMPAT_fixed_partitions_LABEL_image_0_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_1 DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_3e000
#define DT_COMPAT_fixed_partitions_LABEL_image_1_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_storage DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions_S_partition_70000
#define DT_COMPAT_fixed_partitions_LABEL_storage_EXISTS 1

/*
 * Macros for compatibles with status "okay" nodes
 */
#define DT_COMPAT_HAS_OKAY_wch_sim_cxx 1
#define DT_COMPAT_HAS_OKAY_wch_qingke_v4 1
#define DT_COMPAT_HAS_OKAY_wch_ch582f 1
#define DT_COMPAT_HAS_OKAY_wch_ch32v_pfic 1
#define DT_COMPAT_HAS_OKAY_wch_ch32v_v4_systick 1
#define DT_COMPAT_HAS_OKAY_wch_ch5xx_flash_controller 1
#define DT_COMPAT_HAS_OKAY_wch_nv_flash 1
#define DT_COMPAT_HAS_OKAY_soc_nv_flash 1
#define DT_COMPAT_HAS_OKAY_fixed_partitions 1
#define DT_COMPAT_HAS_OKAY_mmio_sram 1
#define DT_COMPAT_HAS_OKAY_wch_ch5xx_pinctrl 1
#define DT_COMPAT_HAS_OKAY_wch_ch57x_gpio 1
#define DT_COMPAT_HAS_OKAY_wch_ch5xx_uart 1
#define DT_COMPAT_HAS_OKAY_wch_ch58x_udc 1
#define DT_COMPAT_HAS_OKAY_zephyr_cdc_acm_uart 1
#define DT_COMPAT_HAS_OKAY_vcp_link_uart 1
#define DT_COMPAT_HAS_OKAY_wch_ch5xx_pwm 1
#define DT_COMPAT_HAS_OKAY_wch_ch57x_clkmux 1
#define DT_COMPAT_HAS_OKAY_pwm_leds 1
#define DT_COMPAT_HAS_OKAY_vcp_map 1

/*
 * Macros for status "okay" instances of each compatible
 */
#define DT_N_INST_wch_sim_cxx_NUM_OKAY 1
#define DT_N_INST_wch_qingke_v4_NUM_OKAY 1
#define DT_N_INST_wch_ch582f_NUM_OKAY 1
#define DT_N_INST_wch_ch32v_pfic_NUM_OKAY 1
#define DT_N_INST_wch_ch32v_v4_systick_NUM_OKAY 1
#define DT_N_INST_wch_ch5xx_flash_controller_NUM_OKAY 1
#define DT_N_INST_wch_nv_flash_NUM_OKAY 1
#define DT_N_INST_soc_nv_flash_NUM_OKAY 1
#define DT_N_INST_fixed_partitions_NUM_OKAY 1
#define DT_N_INST_mmio_sram_NUM_OKAY 1
#define DT_N_INST_wch_ch5xx_pinctrl_NUM_OKAY 1
#define DT_N_INST_wch_ch57x_gpio_NUM_OKAY 2
#define DT_N_INST_wch_ch5xx_uart_NUM_OKAY 1
#define DT_N_INST_wch_ch58x_udc_NUM_OKAY 2
#define DT_N_INST_zephyr_cdc_acm_uart_NUM_OKAY 1
#define DT_N_INST_vcp_link_uart_NUM_OKAY 1
#define DT_N_INST_wch_ch5xx_pwm_NUM_OKAY 1
#define DT_N_INST_wch_ch57x_clkmux_NUM_OKAY 1
#define DT_N_INST_pwm_leds_NUM_OKAY 1
#define DT_N_INST_vcp_map_NUM_OKAY 1
#define DT_FOREACH_OKAY_wch_sim_cxx(fn) fn(DT_N)
#define DT_FOREACH_OKAY_VARGS_wch_sim_cxx(fn, ...) fn(DT_N, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_wch_sim_cxx(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_wch_sim_cxx(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_wch_qingke_v4(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_FOREACH_OKAY_VARGS_wch_qingke_v4(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_wch_qingke_v4(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_wch_qingke_v4(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_wch_ch582f(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_wch_ch582f(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_wch_ch582f(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_wch_ch582f(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_wch_ch32v_pfic(fn) fn(DT_N_S_soc_S_pfic_e000e000)
#define DT_FOREACH_OKAY_VARGS_wch_ch32v_pfic(fn, ...) fn(DT_N_S_soc_S_pfic_e000e000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_wch_ch32v_pfic(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_wch_ch32v_pfic(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_wch_ch32v_v4_systick(fn) fn(DT_N_S_soc_S_systick_e000f000)
#define DT_FOREACH_OKAY_VARGS_wch_ch32v_v4_systick(fn, ...) fn(DT_N_S_soc_S_systick_e000f000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_wch_ch32v_v4_systick(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_wch_ch32v_v4_systick(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_wch_ch5xx_flash_controller(fn) fn(DT_N_S_soc_S_flash_controller_40001800)
#define DT_FOREACH_OKAY_VARGS_wch_ch5xx_flash_controller(fn, ...) fn(DT_N_S_soc_S_flash_controller_40001800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_wch_ch5xx_flash_controller(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_wch_ch5xx_flash_controller(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_wch_nv_flash(fn) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0)
#define DT_FOREACH_OKAY_VARGS_wch_nv_flash(fn, ...) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_wch_nv_flash(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_wch_nv_flash(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_soc_nv_flash(fn) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0)
#define DT_FOREACH_OKAY_VARGS_soc_nv_flash(fn, ...) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_soc_nv_flash(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_soc_nv_flash(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_fixed_partitions(fn) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions)
#define DT_FOREACH_OKAY_VARGS_fixed_partitions(fn, ...) fn(DT_N_S_soc_S_flash_controller_40001800_S_flash_0_S_partitions, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_fixed_partitions(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_fixed_partitions(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_mmio_sram(fn) fn(DT_N_S_soc_S_memory_20000000)
#define DT_FOREACH_OKAY_VARGS_mmio_sram(fn, ...) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_mmio_sram(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_mmio_sram(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_wch_ch5xx_pinctrl(fn) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller)
#define DT_FOREACH_OKAY_VARGS_wch_ch5xx_pinctrl(fn, ...) fn(DT_N_S_soc_S_system_controller_40001000_S_pin_controller, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_wch_ch5xx_pinctrl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_wch_ch5xx_pinctrl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_wch_ch57x_gpio(fn) fn(DT_N_S_soc_S_gpio_400010a0) fn(DT_N_S_soc_S_gpio_400010c0)
#define DT_FOREACH_OKAY_VARGS_wch_ch57x_gpio(fn, ...) fn(DT_N_S_soc_S_gpio_400010a0, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_400010c0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_wch_ch57x_gpio(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_wch_ch57x_gpio(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_wch_ch5xx_uart(fn) fn(DT_N_S_soc_S_uart_40003400)
#define DT_FOREACH_OKAY_VARGS_wch_ch5xx_uart(fn, ...) fn(DT_N_S_soc_S_uart_40003400, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_wch_ch5xx_uart(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_wch_ch5xx_uart(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_wch_ch58x_udc(fn) fn(DT_N_S_soc_S_udc_40008000) fn(DT_N_S_soc_S_udc_40008400)
#define DT_FOREACH_OKAY_VARGS_wch_ch58x_udc(fn, ...) fn(DT_N_S_soc_S_udc_40008000, __VA_ARGS__) fn(DT_N_S_soc_S_udc_40008400, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_wch_ch58x_udc(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_wch_ch58x_udc(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_zephyr_cdc_acm_uart(fn) fn(DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0)
#define DT_FOREACH_OKAY_VARGS_zephyr_cdc_acm_uart(fn, ...) fn(DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zephyr_cdc_acm_uart(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zephyr_cdc_acm_uart(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_vcp_link_uart(fn) fn(DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0)
#define DT_FOREACH_OKAY_VARGS_vcp_link_uart(fn, ...) fn(DT_N_S_soc_S_udc_40008000_S_cdc_acm_uart0_S_vcp_link_cdc0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_vcp_link_uart(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_vcp_link_uart(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_wch_ch5xx_pwm(fn) fn(DT_N_S_soc_S_pwm_40005000)
#define DT_FOREACH_OKAY_VARGS_wch_ch5xx_pwm(fn, ...) fn(DT_N_S_soc_S_pwm_40005000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_wch_ch5xx_pwm(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_wch_ch5xx_pwm(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_wch_ch57x_clkmux(fn) fn(DT_N_S_clocks_S_clkmux)
#define DT_FOREACH_OKAY_VARGS_wch_ch57x_clkmux(fn, ...) fn(DT_N_S_clocks_S_clkmux, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_wch_ch57x_clkmux(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_wch_ch57x_clkmux(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_pwm_leds(fn) fn(DT_N_S_pwmleds)
#define DT_FOREACH_OKAY_VARGS_pwm_leds(fn, ...) fn(DT_N_S_pwmleds, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_pwm_leds(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_pwm_leds(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_vcp_map(fn) fn(DT_N_S_vcpmap)
#define DT_FOREACH_OKAY_VARGS_vcp_map(fn, ...) fn(DT_N_S_vcpmap, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_vcp_map(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_vcp_map(fn, ...) fn(0, __VA_ARGS__)

/*
 * Bus information for status "okay" nodes of each compatible
 */
#define DT_COMPAT_zephyr_cdc_acm_uart_BUS_usb 1
#define DT_COMPAT_vcp_link_uart_BUS_uart 1
